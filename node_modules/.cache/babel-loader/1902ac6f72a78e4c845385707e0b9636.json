{"ast":null,"code":"import { useState, useContext } from 'react';\nimport { MensagensContext } from '../context/MensagensContext';\nexport const useRoleta = () => {\n  const [girar, setGirar] = useState(false);\n  const [angulo, setAngulo] = useState(0);\n  const {\n    selecionarCartaAleatoria\n  } = useContext(MensagensContext);\n  const girarRoleta = () => {\n    if (!girar) {\n      // Limpa carta atual\n      const novoAngulo = angulo + 1080 + Math.floor(Math.random() * 720);\n      setAngulo(novoAngulo);\n      setGirar(true);\n\n      // Após a animação, seleciona uma carta aleatória\n      setTimeout(() => {\n        selecionarCartaAleatoria();\n        setGirar(false);\n      }, 3000);\n    }\n  };\n  return {\n    girar,\n    angulo,\n    girarRoleta\n  };\n};","map":{"version":3,"names":["useState","useContext","MensagensContext","useRoleta","girar","setGirar","angulo","setAngulo","selecionarCartaAleatoria","girarRoleta","novoAngulo","Math","floor","random","setTimeout"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/hooks/useRoleta.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { MensagensContext } from '../context/MensagensContext';\n\nexport const useRoleta = () => {\n  const [girar, setGirar] = useState(false);\n  const [angulo, setAngulo] = useState(0);\n  const { selecionarCartaAleatoria } = useContext(MensagensContext);\n\n  const girarRoleta = () => {\n    if (!girar) {\n      // Limpa carta atual\n      const novoAngulo = angulo + 1080 + Math.floor(Math.random() * 720);\n      setAngulo(novoAngulo);\n      setGirar(true);\n      \n      // Após a animação, seleciona uma carta aleatória\n      setTimeout(() => {\n        selecionarCartaAleatoria();\n        setGirar(false);\n      }, 3000);\n    }\n  };\n\n  return { girar, angulo, girarRoleta };\n};"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM;IAAEQ;EAAyB,CAAC,GAAGP,UAAU,CAACC,gBAAgB,CAAC;EAEjE,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACL,KAAK,EAAE;MACV;MACA,MAAMM,UAAU,GAAGJ,MAAM,GAAG,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MAClEN,SAAS,CAACG,UAAU,CAAC;MACrBL,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACAS,UAAU,CAAC,MAAM;QACfN,wBAAwB,CAAC,CAAC;QAC1BH,QAAQ,CAAC,KAAK,CAAC;MACjB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,OAAO;IAAED,KAAK;IAAEE,MAAM;IAAEG;EAAY,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}