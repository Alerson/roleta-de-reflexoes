{"ast":null,"code":"/**\n * Serviço para gerenciar áudio no aplicativo\n */class AudioService{constructor(){this.audio=null;this.initialized=false;this.musicaAtiva=false;this.volume=0.5;}/**\n   * Inicializa o serviço de áudio com melhor tratamento de erros\n   * @param {string} src - O caminho para o arquivo de áudio\n   */init(){let src=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'/musicas/relaxing-background.mp3';if(this.initialized)return;try{this.audio=new Audio(src);this.audio.loop=true;this.audio.volume=this.volume;// Verificar se o usuário tinha a música ativa anteriormente\nconst musicaAtiva=localStorage.getItem('musicaAtiva')==='true';this.musicaAtiva=musicaAtiva;// Marcar como inicializado antes de tentar reproduzir\nthis.initialized=true;// Tentar reproduzir somente se o usuário tiver ativado a música antes\n// e com um pequeno atraso para evitar problemas de inicialização\nif(musicaAtiva){setTimeout(()=>{this.playWithErrorHandling();},1000);}}catch(error){console.error(\"Erro ao inicializar serviço de áudio:\",error);this.initialized=true;// Marcar como inicializado mesmo com erro\n}}/**\n   * Reproduz o áudio com tratamento de erros adequado\n   */playWithErrorHandling(){if(!this.audio)return;try{const playPromise=this.audio.play();if(playPromise!==undefined){playPromise.then(()=>{this.musicaAtiva=true;localStorage.setItem('musicaAtiva','true');}).catch(error=>{console.error(\"Erro ao reproduzir áudio:\",error);// Em caso de erro, podemos considerar que a música está desativada\nthis.musicaAtiva=false;localStorage.setItem('musicaAtiva','false');});}}catch(error){console.error(\"Exceção ao reproduzir áudio:\",error);this.musicaAtiva=false;localStorage.setItem('musicaAtiva','false');}}/**\n   * Reproduz o áudio\n   */play(){if(!this.initialized){this.init();return;}this.playWithErrorHandling();}/**\n   * Pausa o áudio com tratamento de erros\n   */pause(){if(!this.audio)return;try{this.audio.pause();this.musicaAtiva=false;localStorage.setItem('musicaAtiva','false');}catch(error){console.error(\"Erro ao pausar áudio:\",error);}}/**\n   * Alterna entre tocar e pausar a música\n   * @returns {boolean} - O novo estado (true = tocando, false = pausado)\n   */toggle(){if(this.musicaAtiva){this.pause();}else{this.play();}return this.musicaAtiva;}/**\n   * Define o volume do áudio\n   * @param {number} value - O valor do volume (entre 0 e 1)\n   */setVolume(value){if(value>=0&&value<=1){this.volume=value;if(this.audio){try{this.audio.volume=this.volume;}catch(error){console.error(\"Erro ao ajustar volume:\",error);}}}}/**\n   * Verifica se a música está tocando\n   * @returns {boolean} - true se a música estiver tocando, false caso contrário\n   */isPlaying(){return this.musicaAtiva;}/**\n   * Limpa recursos do serviço de áudio\n   */cleanup(){if(this.audio){try{this.audio.pause();this.audio.src='';this.audio=null;}catch(error){console.error(\"Erro ao limpar recursos de áudio:\",error);}}this.initialized=false;}}// Exporta uma única instância do serviço\nconst audioService=new AudioService();export default audioService;","map":{"version":3,"names":["AudioService","constructor","audio","initialized","musicaAtiva","volume","init","src","arguments","length","undefined","Audio","loop","localStorage","getItem","setTimeout","playWithErrorHandling","error","console","playPromise","play","then","setItem","catch","pause","toggle","setVolume","value","isPlaying","cleanup","audioService"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/services/AudioService.js"],"sourcesContent":["/**\n * Serviço para gerenciar áudio no aplicativo\n */\nclass AudioService {\n  constructor() {\n    this.audio = null;\n    this.initialized = false;\n    this.musicaAtiva = false;\n    this.volume = 0.5;\n  }\n\n  /**\n   * Inicializa o serviço de áudio com melhor tratamento de erros\n   * @param {string} src - O caminho para o arquivo de áudio\n   */\n  init(src = '/musicas/relaxing-background.mp3') {\n    if (this.initialized) return;\n\n    try {\n      this.audio = new Audio(src);\n      this.audio.loop = true;\n      this.audio.volume = this.volume;\n      \n      // Verificar se o usuário tinha a música ativa anteriormente\n      const musicaAtiva = localStorage.getItem('musicaAtiva') === 'true';\n      this.musicaAtiva = musicaAtiva;\n      \n      // Marcar como inicializado antes de tentar reproduzir\n      this.initialized = true;\n      \n      // Tentar reproduzir somente se o usuário tiver ativado a música antes\n      // e com um pequeno atraso para evitar problemas de inicialização\n      if (musicaAtiva) {\n        setTimeout(() => {\n          this.playWithErrorHandling();\n        }, 1000);\n      }\n    } catch (error) {\n      console.error(\"Erro ao inicializar serviço de áudio:\", error);\n      this.initialized = true; // Marcar como inicializado mesmo com erro\n    }\n  }\n\n  /**\n   * Reproduz o áudio com tratamento de erros adequado\n   */\n  playWithErrorHandling() {\n    if (!this.audio) return;\n    \n    try {\n      const playPromise = this.audio.play();\n      \n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {\n            this.musicaAtiva = true;\n            localStorage.setItem('musicaAtiva', 'true');\n          })\n          .catch(error => {\n            console.error(\"Erro ao reproduzir áudio:\", error);\n            // Em caso de erro, podemos considerar que a música está desativada\n            this.musicaAtiva = false;\n            localStorage.setItem('musicaAtiva', 'false');\n          });\n      }\n    } catch (error) {\n      console.error(\"Exceção ao reproduzir áudio:\", error);\n      this.musicaAtiva = false;\n      localStorage.setItem('musicaAtiva', 'false');\n    }\n  }\n\n  /**\n   * Reproduz o áudio\n   */\n  play() {\n    if (!this.initialized) {\n      this.init();\n      return;\n    }\n\n    this.playWithErrorHandling();\n  }\n\n  /**\n   * Pausa o áudio com tratamento de erros\n   */\n  pause() {\n    if (!this.audio) return;\n    \n    try {\n      this.audio.pause();\n      this.musicaAtiva = false;\n      localStorage.setItem('musicaAtiva', 'false');\n    } catch (error) {\n      console.error(\"Erro ao pausar áudio:\", error);\n    }\n  }\n\n  /**\n   * Alterna entre tocar e pausar a música\n   * @returns {boolean} - O novo estado (true = tocando, false = pausado)\n   */\n  toggle() {\n    if (this.musicaAtiva) {\n      this.pause();\n    } else {\n      this.play();\n    }\n    return this.musicaAtiva;\n  }\n\n  /**\n   * Define o volume do áudio\n   * @param {number} value - O valor do volume (entre 0 e 1)\n   */\n  setVolume(value) {\n    if (value >= 0 && value <= 1) {\n      this.volume = value;\n      \n      if (this.audio) {\n        try {\n          this.audio.volume = this.volume;\n        } catch (error) {\n          console.error(\"Erro ao ajustar volume:\", error);\n        }\n      }\n    }\n  }\n\n  /**\n   * Verifica se a música está tocando\n   * @returns {boolean} - true se a música estiver tocando, false caso contrário\n   */\n  isPlaying() {\n    return this.musicaAtiva;\n  }\n\n  /**\n   * Limpa recursos do serviço de áudio\n   */\n  cleanup() {\n    if (this.audio) {\n      try {\n        this.audio.pause();\n        this.audio.src = '';\n        this.audio = null;\n      } catch (error) {\n        console.error(\"Erro ao limpar recursos de áudio:\", error);\n      }\n    }\n    this.initialized = false;\n  }\n}\n\n// Exporta uma única instância do serviço\nconst audioService = new AudioService();\nexport default audioService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}