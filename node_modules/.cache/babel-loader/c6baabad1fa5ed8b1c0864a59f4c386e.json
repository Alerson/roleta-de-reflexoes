{"ast":null,"code":"var _jsxFileName = \"/Users/alersonrigo/roleta-de-reflexoes/src/components/CartaReflexao/CartaReflexao.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport './CartaReflexao.css';\nconst CartaReflexao = ({\n  mensagem\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Efeito para ativar a animação quando o componente é montado\n  useEffect(() => {\n    // Pequeno delay para garantir que a animação ocorra após a roleta parar\n    const timer = setTimeout(() => {\n      setIsVisible(true);\n    }, 100);\n\n    // Log para debug\n    console.log('CartaReflexao recebeu mensagem:', mensagem);\n    return () => clearTimeout(timer);\n  }, [mensagem]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carta-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, isVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brilho\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carta-reflexao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Reflex\\xE3o\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, mensagem)));\n};\nexport default CartaReflexao;","map":{"version":3,"names":["React","useEffect","useState","CartaReflexao","mensagem","isVisible","setIsVisible","timer","setTimeout","console","log","clearTimeout","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/components/CartaReflexao/CartaReflexao.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './CartaReflexao.css';\n\nconst CartaReflexao = ({ mensagem }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  \n  // Efeito para ativar a animação quando o componente é montado\n  useEffect(() => {\n    // Pequeno delay para garantir que a animação ocorra após a roleta parar\n    const timer = setTimeout(() => {\n      setIsVisible(true);\n    }, 100);\n    \n    // Log para debug\n    console.log('CartaReflexao recebeu mensagem:', mensagem);\n    \n    return () => clearTimeout(timer);\n  }, [mensagem]);\n\n  return (\n    <div className=\"carta-container\">\n      {isVisible && <div className=\"brilho\"></div>}\n      <div className=\"carta-reflexao\">\n        <h2>Reflexão</h2>\n        <p>{mensagem}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CartaReflexao;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAE5B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,EAAE,GAAG,CAAC;;IAEP;IACAG,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEN,QAAQ,CAAC;IAExD,OAAO,MAAMO,YAAY,CAACJ,KAAK,CAAC;EAClC,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEJ,KAAA,CAAAY,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7Bd,SAAS,iBAAIL,KAAA,CAAAY,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eAC5CnB,KAAA,CAAAY,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BnB,KAAA,CAAAY,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAY,CAAC,eACjBnB,KAAA,CAAAY,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIf,QAAY,CACb,CACF,CAAC;AAEV,CAAC;AAED,eAAeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}