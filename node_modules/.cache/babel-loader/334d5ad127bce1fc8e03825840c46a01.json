{"ast":null,"code":"var _jsxFileName = \"/Users/alersonrigo/roleta-de-reflexoes/src/pages/Home/Home.jsx\";\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Roleta from '../../components/Roleta';\nimport SeletorCategoria from '../../components/SeletorCategoria';\nimport CartaReflexao from '../../components/CartaReflexao';\nimport Botao from '../../components/Botao';\nimport { useRoleta } from '../../hooks/useRoleta';\nimport { MensagensContext } from '../../context/MensagensContext';\nimport './Home.css';\nconst Home = () => {\n  const {\n    girar,\n    angulo,\n    girarRoleta\n  } = useRoleta();\n  const {\n    cartaSelecionada\n  } = useContext(MensagensContext);\n  const navigate = useNavigate();\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [achievements, setAchievements] = useState([]);\n  const [isShaking, setIsShaking] = useState(false);\n  const [activeTab, setActiveTab] = useState('conquistas');\n  const [modalAberto, setModalAberto] = useState(false);\n\n  // Detectar agita√ß√£o do dispositivo para girar roleta\n  const handleDeviceMotion = useCallback(event => {\n    const acceleration = event.accelerationIncludingGravity;\n    if (!acceleration) return;\n    const movement = Math.abs(acceleration.x) + Math.abs(acceleration.y) + Math.abs(acceleration.z);\n\n    // Se movimento for maior que limite e n√£o estiver girando\n    if (movement > 25 && !girar && !isShaking) {\n      setIsShaking(true);\n\n      // Vibrar o dispositivo se a API estiver dispon√≠vel\n      if ('vibrate' in navigator) {\n        navigator.vibrate(200);\n      }\n\n      // Girar a roleta\n      girarRoleta();\n\n      // Resetar estado ap√≥s um tempo\n      setTimeout(() => setIsShaking(false), 1000);\n    }\n  }, [girar, girarRoleta, isShaking]);\n\n  // Carregar dados do jogador e inicializar estado\n  useEffect(() => {\n    // Verificar se h√° um jogador atual\n    const player = localStorage.getItem('currentPlayer');\n    if (player) {\n      setCurrentPlayer(JSON.parse(player));\n    } else {\n      // Redirecionar para a tela inicial se n√£o tiver jogador\n      navigate('/');\n      return;\n    }\n\n    // Carregar realiza√ß√µes do jogador\n    const savedAchievements = localStorage.getItem(`achievements_${JSON.parse(player).id}`);\n    if (savedAchievements) {\n      setAchievements(JSON.parse(savedAchievements));\n    }\n\n    // Adicionar evento de vibra√ß√£o ao girar\n    window.addEventListener(\"devicemotion\", handleDeviceMotion);\n    return () => {\n      window.removeEventListener(\"devicemotion\", handleDeviceMotion);\n    };\n  }, [navigate, handleDeviceMotion]);\n  const voltarInicio = () => {\n    navigate('/');\n  };\n\n  // Alternar aba no modal\n  const trocarAba = aba => {\n    setActiveTab(aba);\n  };\n\n  // Abrir e fechar modal\n  const abrirModal = () => {\n    setModalAberto(true);\n  };\n  const fecharModal = () => {\n    setModalAberto(false);\n  };\n\n  // Adicionar uma conquista\n  const addAchievement = useCallback((id, title) => {\n    if (!achievements.some(a => a.id === id)) {\n      const newAchievement = {\n        id,\n        title,\n        date: new Date().toISOString()\n      };\n      const updatedAchievements = [...achievements, newAchievement];\n      setAchievements(updatedAchievements);\n      if (currentPlayer) {\n        localStorage.setItem(`achievements_${currentPlayer.id}`, JSON.stringify(updatedAchievements));\n      }\n\n      // Mostrar notifica√ß√£o\n      showAchievementNotification(title);\n    }\n  }, [achievements, currentPlayer]);\n\n  // Mostrar notifica√ß√£o de conquista\n  const showAchievementNotification = title => {\n    // Criar elemento de notifica√ß√£o\n    const notification = document.createElement('div');\n    notification.className = 'achievement-notification';\n    notification.innerHTML = `\n      <div class=\"achievement-icon\">\n        <span role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n      </div>\n      <div class=\"achievement-content\">\n        <div class=\"achievement-title\">Conquista Desbloqueada!</div>\n        <div class=\"achievement-desc\">${title}</div>\n      </div>\n    `;\n\n    // Adicionar ao DOM\n    document.body.appendChild(notification);\n\n    // Vibrar o dispositivo se a API estiver dispon√≠vel\n    if ('vibrate' in navigator) {\n      navigator.vibrate([100, 50, 100, 50, 100]);\n    }\n\n    // Animar entrada\n    setTimeout(() => {\n      notification.classList.add('show');\n    }, 10);\n\n    // Remover ap√≥s alguns segundos\n    setTimeout(() => {\n      notification.classList.remove('show');\n      setTimeout(() => {\n        document.body.removeChild(notification);\n      }, 500);\n    }, 3000);\n  };\n\n  // Fun√ß√£o para limpar as conquistas\n  const limparConquistas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as suas conquistas?')) {\n      setAchievements([]);\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 50, 100]);\n      }\n    }\n  };\n\n  // Fun√ß√£o para limpar todas as estat√≠sticas\n  const limparEstatisticas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as estat√≠sticas deste perfil?')) {\n      // Limpar conquistas\n      setAchievements([]);\n      // Limpar contagem de giros\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n        localStorage.removeItem(`spins_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 100, 100, 100]);\n      }\n    }\n  };\n\n  // Verificar conquistas quando a roleta parar\n  useEffect(() => {\n    if (cartaSelecionada && currentPlayer) {\n      // Verificar conquista de primeira reflex√£o\n      if (!achievements.some(a => a.id === 'first_spin')) {\n        addAchievement('first_spin', 'Primeira Reflex√£o');\n      }\n\n      // Verificar o n√∫mero de giros (salvo no localStorage)\n      const spinCount = parseInt(localStorage.getItem(`spins_${currentPlayer.id}`) || '0') + 1;\n      localStorage.setItem(`spins_${currentPlayer.id}`, spinCount.toString());\n\n      // Conquistas baseadas em n√∫mero de giros\n      if (spinCount === 10 && !achievements.some(a => a.id === 'ten_spins')) {\n        addAchievement('ten_spins', 'Dez Reflex√µes');\n      } else if (spinCount === 50 && !achievements.some(a => a.id === 'fifty_spins')) {\n        addAchievement('fifty_spins', 'Cinquenta Reflex√µes');\n      }\n    }\n  }, [cartaSelecionada, currentPlayer, achievements, addAchievement]);\n\n  // Renderizar as abas do modal\n  const renderModalContent = () => {\n    switch (activeTab) {\n      case 'conquistas':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tab-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }\n        }, achievements.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mensagem-vazia\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }\n        }, \"Continue jogando para desbloquear conquistas!\") : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"lista-conquistas\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }\n        }, achievements.map(achievement => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"conquista-item\",\n          key: achievement.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"conquista-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Trof\\xE9u\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 23\n          }\n        }, \"\\uD83C\\uDFC6\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"conquista-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 23\n          }\n        }, achievement.title), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 23\n          }\n        }, new Date(achievement.date).toLocaleDateString()))))));\n      case 'configuracoes':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tab-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"config-section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"config-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }\n        }, \"Gerenciar dados do perfil\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"config-button\",\n          onClick: limparConquistas,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"config-icon\",\n          role: \"img\",\n          \"aria-label\": \"Trof\\xE9u\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }\n        }, \"\\uD83C\\uDFC6\"), \"Limpar todas as conquistas\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"config-button danger\",\n          onClick: limparEstatisticas,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"config-icon\",\n          role: \"img\",\n          \"aria-label\": \"Aten\\xE7\\xE3o\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }\n        }, \"\\u26A0\\uFE0F\"), \"Limpar todos os dados do perfil\")));\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 16\n          }\n        }, \"Selecione uma aba\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"botao-voltar\",\n    onClick: voltarInicio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"botao-voltar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, \"\\u2190\"), \" Voltar\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, \"Roleta de Reflex\\xF5es\"), currentPlayer && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-info\",\n    onClick: abrirModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `avatar avatar-${currentPlayer.avatar || 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, currentPlayer.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `jogo-area ${cartaSelecionada ? 'has-result' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controles-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SeletorCategoria, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Roleta, {\n    girar: girar,\n    angulo: angulo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Botao, {\n    texto: \"Girar Roleta\",\n    onClick: girarRoleta,\n    disabled: girar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"shake-instruction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, \"Ou agite o dispositivo para girar a roleta!\")), cartaSelecionada && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resultado-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartaReflexao, {\n    mensagem: cartaSelecionada,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }))), modalAberto && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-conteudo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modal-fechar\",\n    onClick: fecharModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"perfil-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, currentPlayer && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `avatar avatar-${currentPlayer.avatar || 1} avatar-large`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 19\n    }\n  }, currentPlayer.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${activeTab === 'conquistas' ? 'active' : ''}`,\n    onClick: () => trocarAba('conquistas'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, \"Conquistas\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `tab-button ${activeTab === 'configuracoes' ? 'active' : ''}`,\n    onClick: () => trocarAba('configuracoes'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, \"Configura\\xE7\\xF5es\")), renderModalContent())));\n};\nexport default Home;","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","useNavigate","Roleta","SeletorCategoria","CartaReflexao","Botao","useRoleta","MensagensContext","Home","girar","angulo","girarRoleta","cartaSelecionada","navigate","currentPlayer","setCurrentPlayer","achievements","setAchievements","isShaking","setIsShaking","activeTab","setActiveTab","modalAberto","setModalAberto","handleDeviceMotion","event","acceleration","accelerationIncludingGravity","movement","Math","abs","x","y","z","navigator","vibrate","setTimeout","player","localStorage","getItem","JSON","parse","savedAchievements","id","window","addEventListener","removeEventListener","voltarInicio","trocarAba","aba","abrirModal","fecharModal","addAchievement","title","some","a","newAchievement","date","Date","toISOString","updatedAchievements","setItem","stringify","showAchievementNotification","notification","document","createElement","className","innerHTML","body","appendChild","classList","add","remove","removeChild","limparConquistas","confirm","removeItem","limparEstatisticas","spinCount","parseInt","toString","renderModalContent","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","achievement","key","role","toLocaleDateString","onClick","avatar","name","texto","disabled","mensagem","Fragment"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/pages/Home/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Roleta from '../../components/Roleta';\nimport SeletorCategoria from '../../components/SeletorCategoria';\nimport CartaReflexao from '../../components/CartaReflexao';\nimport Botao from '../../components/Botao';\nimport { useRoleta } from '../../hooks/useRoleta';\nimport { MensagensContext } from '../../context/MensagensContext';\nimport './Home.css';\n\nconst Home = () => {\n  const { girar, angulo, girarRoleta } = useRoleta();\n  const { cartaSelecionada } = useContext(MensagensContext);\n  const navigate = useNavigate();\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [achievements, setAchievements] = useState([]);\n  const [isShaking, setIsShaking] = useState(false);\n  const [activeTab, setActiveTab] = useState('conquistas');\n  const [modalAberto, setModalAberto] = useState(false);\n\n  // Detectar agita√ß√£o do dispositivo para girar roleta\n  const handleDeviceMotion = useCallback((event) => {\n    const acceleration = event.accelerationIncludingGravity;\n    \n    if (!acceleration) return;\n    \n    const movement = \n      Math.abs(acceleration.x) + \n      Math.abs(acceleration.y) + \n      Math.abs(acceleration.z);\n    \n    // Se movimento for maior que limite e n√£o estiver girando\n    if (movement > 25 && !girar && !isShaking) {\n      setIsShaking(true);\n      \n      // Vibrar o dispositivo se a API estiver dispon√≠vel\n      if ('vibrate' in navigator) {\n        navigator.vibrate(200);\n      }\n      \n      // Girar a roleta\n      girarRoleta();\n      \n      // Resetar estado ap√≥s um tempo\n      setTimeout(() => setIsShaking(false), 1000);\n    }\n  }, [girar, girarRoleta, isShaking]);\n\n  // Carregar dados do jogador e inicializar estado\n  useEffect(() => {\n    // Verificar se h√° um jogador atual\n    const player = localStorage.getItem('currentPlayer');\n    \n    if (player) {\n      setCurrentPlayer(JSON.parse(player));\n    } else {\n      // Redirecionar para a tela inicial se n√£o tiver jogador\n      navigate('/');\n      return;\n    }\n\n    // Carregar realiza√ß√µes do jogador\n    const savedAchievements = localStorage.getItem(`achievements_${JSON.parse(player).id}`);\n    if (savedAchievements) {\n      setAchievements(JSON.parse(savedAchievements));\n    }\n\n    // Adicionar evento de vibra√ß√£o ao girar\n    window.addEventListener(\"devicemotion\", handleDeviceMotion);\n    \n    return () => {\n      window.removeEventListener(\"devicemotion\", handleDeviceMotion);\n    };\n  }, [navigate, handleDeviceMotion]);\n\n  const voltarInicio = () => {\n    navigate('/');\n  };\n\n  // Alternar aba no modal\n  const trocarAba = (aba) => {\n    setActiveTab(aba);\n  };\n\n  // Abrir e fechar modal\n  const abrirModal = () => {\n    setModalAberto(true);\n  };\n\n  const fecharModal = () => {\n    setModalAberto(false);\n  };\n\n  // Adicionar uma conquista\n  const addAchievement = useCallback((id, title) => {\n    if (!achievements.some(a => a.id === id)) {\n      const newAchievement = { id, title, date: new Date().toISOString() };\n      const updatedAchievements = [...achievements, newAchievement];\n      \n      setAchievements(updatedAchievements);\n      if (currentPlayer) {\n        localStorage.setItem(`achievements_${currentPlayer.id}`, JSON.stringify(updatedAchievements));\n      }\n      \n      // Mostrar notifica√ß√£o\n      showAchievementNotification(title);\n    }\n  }, [achievements, currentPlayer]);\n\n  // Mostrar notifica√ß√£o de conquista\n  const showAchievementNotification = (title) => {\n    // Criar elemento de notifica√ß√£o\n    const notification = document.createElement('div');\n    notification.className = 'achievement-notification';\n    notification.innerHTML = `\n      <div class=\"achievement-icon\">\n        <span role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n      </div>\n      <div class=\"achievement-content\">\n        <div class=\"achievement-title\">Conquista Desbloqueada!</div>\n        <div class=\"achievement-desc\">${title}</div>\n      </div>\n    `;\n    \n    // Adicionar ao DOM\n    document.body.appendChild(notification);\n    \n    // Vibrar o dispositivo se a API estiver dispon√≠vel\n    if ('vibrate' in navigator) {\n      navigator.vibrate([100, 50, 100, 50, 100]);\n    }\n    \n    // Animar entrada\n    setTimeout(() => {\n      notification.classList.add('show');\n    }, 10);\n    \n    // Remover ap√≥s alguns segundos\n    setTimeout(() => {\n      notification.classList.remove('show');\n      setTimeout(() => {\n        document.body.removeChild(notification);\n      }, 500);\n    }, 3000);\n  };\n\n  // Fun√ß√£o para limpar as conquistas\n  const limparConquistas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as suas conquistas?')) {\n      setAchievements([]);\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 50, 100]);\n      }\n    }\n  };\n\n  // Fun√ß√£o para limpar todas as estat√≠sticas\n  const limparEstatisticas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as estat√≠sticas deste perfil?')) {\n      // Limpar conquistas\n      setAchievements([]);\n      // Limpar contagem de giros\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n        localStorage.removeItem(`spins_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 100, 100, 100]);\n      }\n    }\n  };\n\n  // Verificar conquistas quando a roleta parar\n  useEffect(() => {\n    if (cartaSelecionada && currentPlayer) {\n      // Verificar conquista de primeira reflex√£o\n      if (!achievements.some(a => a.id === 'first_spin')) {\n        addAchievement('first_spin', 'Primeira Reflex√£o');\n      }\n      \n      // Verificar o n√∫mero de giros (salvo no localStorage)\n      const spinCount = parseInt(localStorage.getItem(`spins_${currentPlayer.id}`) || '0') + 1;\n      localStorage.setItem(`spins_${currentPlayer.id}`, spinCount.toString());\n      \n      // Conquistas baseadas em n√∫mero de giros\n      if (spinCount === 10 && !achievements.some(a => a.id === 'ten_spins')) {\n        addAchievement('ten_spins', 'Dez Reflex√µes');\n      } else if (spinCount === 50 && !achievements.some(a => a.id === 'fifty_spins')) {\n        addAchievement('fifty_spins', 'Cinquenta Reflex√µes');\n      }\n    }\n  }, [cartaSelecionada, currentPlayer, achievements, addAchievement]);\n\n  // Renderizar as abas do modal\n  const renderModalContent = () => {\n    switch (activeTab) {\n      case 'conquistas':\n        return (\n          <div className=\"tab-content\">\n            {achievements.length === 0 ? (\n              <p className=\"mensagem-vazia\">Continue jogando para desbloquear conquistas!</p>\n            ) : (\n              <div className=\"lista-conquistas\">\n                {achievements.map(achievement => (\n                  <div className=\"conquista-item\" key={achievement.id}>\n                    <div className=\"conquista-icon\">\n                      <span role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n                    </div>\n                    <div className=\"conquista-info\">\n                      <h3>{achievement.title}</h3>\n                      <p>{new Date(achievement.date).toLocaleDateString()}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        );\n      \n      case 'configuracoes':\n        return (\n          <div className=\"tab-content\">\n            <div className=\"config-section\">\n              <h3 className=\"config-title\">Gerenciar dados do perfil</h3>\n              \n              <button \n                className=\"config-button\"\n                onClick={limparConquistas}\n              >\n                <span className=\"config-icon\" role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n                Limpar todas as conquistas\n              </button>\n              \n              <button \n                className=\"config-button danger\"\n                onClick={limparEstatisticas}\n              >\n                <span className=\"config-icon\" role=\"img\" aria-label=\"Aten√ß√£o\">‚ö†Ô∏è</span>\n                Limpar todos os dados do perfil\n              </button>\n            </div>\n          </div>\n        );\n      \n      default:\n        return <div>Selecione uma aba</div>;\n    }\n  };\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"header\">\n        <button className=\"botao-voltar\" onClick={voltarInicio}>\n          <span className=\"botao-voltar-icon\">‚Üê</span> Voltar\n        </button>\n        <h1>Roleta de Reflex√µes</h1>\n        \n        {currentPlayer && (\n          <div className=\"player-info\" onClick={abrirModal}>\n            <div className={`avatar avatar-${currentPlayer.avatar || 1}`}></div>\n            <span className=\"player-name\">{currentPlayer.name}</span>\n          </div>\n        )}\n      </div>\n      \n      <div className={`jogo-area ${cartaSelecionada ? 'has-result' : ''}`}>\n        <div className=\"controles-area\">\n          <SeletorCategoria />\n          \n          <Roleta girar={girar} angulo={angulo} />\n          \n          <Botao \n            texto=\"Girar Roleta\" \n            onClick={girarRoleta} \n            disabled={girar} \n          />\n          \n          {/* Instru√ß√£o para agitar o dispositivo */}\n          <p className=\"shake-instruction\">\n            Ou agite o dispositivo para girar a roleta!\n          </p>\n        </div>\n        \n        {cartaSelecionada && (\n          <div className=\"resultado-area\">\n            <CartaReflexao mensagem={cartaSelecionada} />\n            {/* Removida a div com os bot√µes de a√ß√£o */}\n          </div>\n        )}\n      </div>\n      \n      {/* Modal de perfil simplificado, usando estado React em vez de manipula√ß√£o DOM direta */}\n      {modalAberto && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-conteudo\">\n            <button \n              className=\"modal-fechar\"\n              onClick={fecharModal}\n            >\n              √ó\n            </button>\n            \n            <div className=\"perfil-header\">\n              {currentPlayer && (\n                <>\n                  <div className={`avatar avatar-${currentPlayer.avatar || 1} avatar-large`}></div>\n                  <h2>{currentPlayer.name}</h2>\n                </>\n              )}\n            </div>\n            \n            <div className=\"tabs\">\n              <button \n                className={`tab-button ${activeTab === 'conquistas' ? 'active' : ''}`}\n                onClick={() => trocarAba('conquistas')}\n              >\n                Conquistas\n              </button>\n              {/* Removida a aba de favoritos */}\n              <button \n                className={`tab-button ${activeTab === 'configuracoes' ? 'active' : ''}`}\n                onClick={() => trocarAba('configuracoes')}\n              >\n                Configura√ß√µes\n              </button>\n            </div>\n            \n            {renderModalContent()}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}