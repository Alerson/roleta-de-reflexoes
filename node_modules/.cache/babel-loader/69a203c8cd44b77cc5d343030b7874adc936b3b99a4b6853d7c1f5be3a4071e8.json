{"ast":null,"code":"var _jsxFileName = \"/Users/alersonrigo/roleta-de-reflexoes/src/components/MusicaControle/MusicaControle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport audioService from '../../services/AudioService';\nimport './MusicaControle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicaControle = ({\n  musicaSrc = '/musicas/relaxing-background.mp3'\n}) => {\n  _s();\n  const [tocando, setTocando] = useState(false);\n\n  // Inicializar o servi칞o de 치udio\n  useEffect(() => {\n    // Verificar estado atual em vez de reinicializar\n    if (!audioService.initialized) {\n      try {\n        audioService.init(musicaSrc);\n      } catch (error) {\n        console.error('Erro ao inicializar 치udio:', error);\n      }\n    }\n\n    // Sincronizar estado inicial\n    setTocando(audioService.isPlaying());\n\n    // Escutar mudan칞as de estado do 치udio\n    const handleAudioChange = event => {\n      if (event.detail && typeof event.detail.isPlaying === 'boolean') {\n        setTocando(event.detail.isPlaying);\n      }\n    };\n    document.addEventListener('audioStateChange', handleAudioChange);\n    return () => {\n      document.removeEventListener('audioStateChange', handleAudioChange);\n    };\n  }, [musicaSrc]);\n\n  // Alternar entre tocar e pausar a m칰sica\n  const toggleMusica = () => {\n    try {\n      const novoEstado = audioService.toggle();\n      setTocando(novoEstado);\n\n      // Disparar evento para outros componentes que possam estar escutando\n      const event = new CustomEvent('audioStateChange', {\n        detail: {\n          isPlaying: novoEstado\n        }\n      });\n      document.dispatchEvent(event);\n    } catch (error) {\n      console.error('Erro ao alternar m칰sica:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `musica-controle ${tocando ? 'tocando' : 'pausado'}`,\n    onClick: toggleMusica,\n    \"aria-label\": tocando ? 'Pausar m칰sica' : 'Tocar m칰sica',\n    title: tocando ? 'Pausar m칰sica' : 'Tocar m칰sica',\n    children: tocando ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"musica-icon tocando\",\n      role: \"img\",\n      \"aria-label\": \"M\\xFAsica tocando\",\n      children: \"\\uD83D\\uDD0A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"musica-icon pausado\",\n      role: \"img\",\n      \"aria-label\": \"M\\xFAsica pausada\",\n      children: \"\\uD83D\\uDD07\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicaControle, \"041P/47yfEEher07m45/PWzj1tE=\");\n_c = MusicaControle;\nexport default MusicaControle;\nvar _c;\n$RefreshReg$(_c, \"MusicaControle\");","map":{"version":3,"names":["React","useState","useEffect","audioService","jsxDEV","_jsxDEV","MusicaControle","musicaSrc","_s","tocando","setTocando","initialized","init","error","console","isPlaying","handleAudioChange","event","detail","document","addEventListener","removeEventListener","toggleMusica","novoEstado","toggle","CustomEvent","dispatchEvent","className","onClick","title","children","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/components/MusicaControle/MusicaControle.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport audioService from '../../services/AudioService';\nimport './MusicaControle.css';\n\nconst MusicaControle = ({ musicaSrc = '/musicas/relaxing-background.mp3' }) => {\n  const [tocando, setTocando] = useState(false);\n\n  // Inicializar o servi칞o de 치udio\n  useEffect(() => {\n    // Verificar estado atual em vez de reinicializar\n    if (!audioService.initialized) {\n      try {\n        audioService.init(musicaSrc);\n      } catch (error) {\n        console.error('Erro ao inicializar 치udio:', error);\n      }\n    }\n    \n    // Sincronizar estado inicial\n    setTocando(audioService.isPlaying());\n    \n    // Escutar mudan칞as de estado do 치udio\n    const handleAudioChange = (event) => {\n      if (event.detail && typeof event.detail.isPlaying === 'boolean') {\n        setTocando(event.detail.isPlaying);\n      }\n    };\n    \n    document.addEventListener('audioStateChange', handleAudioChange);\n    \n    return () => {\n      document.removeEventListener('audioStateChange', handleAudioChange);\n    };\n  }, [musicaSrc]);\n\n  // Alternar entre tocar e pausar a m칰sica\n  const toggleMusica = () => {\n    try {\n      const novoEstado = audioService.toggle();\n      setTocando(novoEstado);\n      \n      // Disparar evento para outros componentes que possam estar escutando\n      const event = new CustomEvent('audioStateChange', { \n        detail: { isPlaying: novoEstado } \n      });\n      document.dispatchEvent(event);\n    } catch (error) {\n      console.error('Erro ao alternar m칰sica:', error);\n    }\n  };\n\n  return (\n    <button \n      className={`musica-controle ${tocando ? 'tocando' : 'pausado'}`}\n      onClick={toggleMusica}\n      aria-label={tocando ? 'Pausar m칰sica' : 'Tocar m칰sica'}\n      title={tocando ? 'Pausar m칰sica' : 'Tocar m칰sica'}\n    >\n      {tocando ? (\n        <span className=\"musica-icon tocando\" role=\"img\" aria-label=\"M칰sica tocando\">\n          游댉\n        </span>\n      ) : (\n        <span className=\"musica-icon pausado\" role=\"img\" aria-label=\"M칰sica pausada\">\n          游댆\n        </span>\n      )}\n    </button>\n  );\n};\n\nexport default MusicaControle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,GAAG;AAAmC,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACC,YAAY,CAACQ,WAAW,EAAE;MAC7B,IAAI;QACFR,YAAY,CAACS,IAAI,CAACL,SAAS,CAAC;MAC9B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;;IAEA;IACAH,UAAU,CAACP,YAAY,CAACY,SAAS,CAAC,CAAC,CAAC;;IAEpC;IACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;MACnC,IAAIA,KAAK,CAACC,MAAM,IAAI,OAAOD,KAAK,CAACC,MAAM,CAACH,SAAS,KAAK,SAAS,EAAE;QAC/DL,UAAU,CAACO,KAAK,CAACC,MAAM,CAACH,SAAS,CAAC;MACpC;IACF,CAAC;IAEDI,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAEJ,iBAAiB,CAAC;IAEhE,OAAO,MAAM;MACXG,QAAQ,CAACE,mBAAmB,CAAC,kBAAkB,EAAEL,iBAAiB,CAAC;IACrE,CAAC;EACH,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI;MACF,MAAMC,UAAU,GAAGpB,YAAY,CAACqB,MAAM,CAAC,CAAC;MACxCd,UAAU,CAACa,UAAU,CAAC;;MAEtB;MACA,MAAMN,KAAK,GAAG,IAAIQ,WAAW,CAAC,kBAAkB,EAAE;QAChDP,MAAM,EAAE;UAAEH,SAAS,EAAEQ;QAAW;MAClC,CAAC,CAAC;MACFJ,QAAQ,CAACO,aAAa,CAACT,KAAK,CAAC;IAC/B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACER,OAAA;IACEsB,SAAS,EAAE,mBAAmBlB,OAAO,GAAG,SAAS,GAAG,SAAS,EAAG;IAChEmB,OAAO,EAAEN,YAAa;IACtB,cAAYb,OAAO,GAAG,eAAe,GAAG,cAAe;IACvDoB,KAAK,EAAEpB,OAAO,GAAG,eAAe,GAAG,cAAe;IAAAqB,QAAA,EAEjDrB,OAAO,gBACNJ,OAAA;MAAMsB,SAAS,EAAC,qBAAqB;MAACI,IAAI,EAAC,KAAK;MAAC,cAAW,mBAAgB;MAAAD,QAAA,EAAC;IAE7E;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEP9B,OAAA;MAAMsB,SAAS,EAAC,qBAAqB;MAACI,IAAI,EAAC,KAAK;MAAC,cAAW,mBAAgB;MAAAD,QAAA,EAAC;IAE7E;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAAC3B,EAAA,CAjEIF,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAmEpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}