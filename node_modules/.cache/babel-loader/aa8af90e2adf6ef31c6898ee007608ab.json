{"ast":null,"code":"import React,{createContext,useState}from'react';import{mensagens}from'../data/mensagens';export const MensagensContext=createContext();export const MensagensProvider=_ref=>{let{children}=_ref;const[categoriaAtual,setCategoriaAtual]=useState('familia');const[cartaSelecionada,setCartaSelecionada]=useState(null);const selecionarCategoria=categoria=>{setCategoriaAtual(categoria);setCartaSelecionada(null);};const selecionarCartaAleatoria=()=>{const indiceAleatorio=Math.floor(Math.random()*mensagens[categoriaAtual].length);setCartaSelecionada(mensagens[categoriaAtual][indiceAleatorio]);};return/*#__PURE__*/React.createElement(MensagensContext.Provider,{value:{mensagens,categoriaAtual,cartaSelecionada,selecionarCategoria,selecionarCartaAleatoria}},children);};","map":{"version":3,"names":["React","createContext","useState","mensagens","MensagensContext","MensagensProvider","_ref","children","categoriaAtual","setCategoriaAtual","cartaSelecionada","setCartaSelecionada","selecionarCategoria","categoria","selecionarCartaAleatoria","indiceAleatorio","Math","floor","random","length","createElement","Provider","value"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/context/MensagensContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport { mensagens } from '../data/mensagens';\n\nexport const MensagensContext = createContext();\n\nexport const MensagensProvider = ({ children }) => {\n  const [categoriaAtual, setCategoriaAtual] = useState('familia');\n  const [cartaSelecionada, setCartaSelecionada] = useState(null);\n\n  const selecionarCategoria = (categoria) => {\n    setCategoriaAtual(categoria);\n    setCartaSelecionada(null);\n  };\n\n  const selecionarCartaAleatoria = () => {\n    const indiceAleatorio = Math.floor(Math.random() * mensagens[categoriaAtual].length);\n    setCartaSelecionada(mensagens[categoriaAtual][indiceAleatorio]);\n  };\n\n  return (\n    <MensagensContext.Provider \n      value={{ \n        mensagens, \n        categoriaAtual, \n        cartaSelecionada, \n        selecionarCategoria, \n        selecionarCartaAleatoria \n      }}\n    >\n      {children}\n    </MensagensContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CACtD,OAASC,SAAS,KAAQ,mBAAmB,CAE7C,MAAO,MAAM,CAAAC,gBAAgB,CAAGH,aAAa,CAAC,CAAC,CAE/C,MAAO,MAAM,CAAAI,iBAAiB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,cAAc,CAAEC,iBAAiB,CAAC,CAAGP,QAAQ,CAAC,SAAS,CAAC,CAC/D,KAAM,CAACQ,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAE9D,KAAM,CAAAU,mBAAmB,CAAIC,SAAS,EAAK,CACzCJ,iBAAiB,CAACI,SAAS,CAAC,CAC5BF,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAG,wBAAwB,CAAGA,CAAA,GAAM,CACrC,KAAM,CAAAC,eAAe,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGf,SAAS,CAACK,cAAc,CAAC,CAACW,MAAM,CAAC,CACpFR,mBAAmB,CAACR,SAAS,CAACK,cAAc,CAAC,CAACO,eAAe,CAAC,CAAC,CACjE,CAAC,CAED,mBACEf,KAAA,CAAAoB,aAAA,CAAChB,gBAAgB,CAACiB,QAAQ,EACxBC,KAAK,CAAE,CACLnB,SAAS,CACTK,cAAc,CACdE,gBAAgB,CAChBE,mBAAmB,CACnBE,wBACF,CAAE,EAEDP,QACwB,CAAC,CAEhC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}