{"ast":null,"code":"var _jsxFileName = \"/Users/alersonrigo/roleta-de-reflexoes/src/pages/Home/Home.jsx\";\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Roleta from '../../components/Roleta';\nimport SeletorCategoria from '../../components/SeletorCategoria';\nimport CartaReflexao from '../../components/CartaReflexao';\nimport Botao from '../../components/Botao';\nimport { useRoleta } from '../../hooks/useRoleta';\nimport { MensagensContext } from '../../context/MensagensContext';\nimport './Home.css';\nconst Home = () => {\n  const {\n    girar,\n    angulo,\n    girarRoleta\n  } = useRoleta();\n  const {\n    cartaSelecionada\n  } = useContext(MensagensContext);\n  const navigate = useNavigate();\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [showIntro, setShowIntro] = useState(true);\n  const [achievements, setAchievements] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [isShaking, setIsShaking] = useState(false);\n\n  // Detectar agita√ß√£o do dispositivo para girar roleta - definido com useCallback\n  const handleDeviceMotion = useCallback(event => {\n    const acceleration = event.accelerationIncludingGravity;\n    if (!acceleration) return;\n    const movement = Math.abs(acceleration.x) + Math.abs(acceleration.y) + Math.abs(acceleration.z);\n\n    // Se movimento for maior que limite e n√£o estiver girando\n    if (movement > 25 && !girar && !isShaking) {\n      setIsShaking(true);\n\n      // Vibrar o dispositivo se a API estiver dispon√≠vel\n      if ('vibrate' in navigator) {\n        navigator.vibrate(200);\n      }\n\n      // Girar a roleta\n      girarRoleta();\n\n      // Resetar estado ap√≥s um tempo\n      setTimeout(() => setIsShaking(false), 1000);\n    }\n  }, [girar, girarRoleta, isShaking]);\n\n  // Carregar dados do jogador e inicializar estado\n  useEffect(() => {\n    // Verificar se h√° um jogador atual\n    const player = localStorage.getItem('currentPlayer');\n    if (player) {\n      setCurrentPlayer(JSON.parse(player));\n    } else {\n      // Redirecionar para a tela inicial se n√£o tiver jogador\n      navigate('/');\n      return;\n    }\n\n    // Carregar realiza√ß√µes do jogador\n    const savedAchievements = localStorage.getItem(`achievements_${JSON.parse(player).id}`);\n    if (savedAchievements) {\n      setAchievements(JSON.parse(savedAchievements));\n    }\n\n    // Carregar favoritos do jogador\n    const savedFavorites = localStorage.getItem(`favorites_${JSON.parse(player).id}`);\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n\n    // Mostrar anima√ß√£o de introdu√ß√£o apenas na primeira vez\n    setTimeout(() => {\n      setShowIntro(false);\n    }, 2000);\n\n    // Adicionar evento de vibra√ß√£o ao girar\n    window.addEventListener(\"devicemotion\", handleDeviceMotion);\n    return () => {\n      window.removeEventListener(\"devicemotion\", handleDeviceMotion);\n    };\n  }, [navigate, handleDeviceMotion]);\n\n  // Fun√ß√£o para configurar as tabs do modal\n  useEffect(() => {\n    // Fun√ß√£o para configurar os controladores de abas\n    const setupTabs = () => {\n      const tabButtons = document.querySelectorAll('.tab-button');\n      const tabContents = document.querySelectorAll('.tab-content');\n      tabButtons.forEach(button => {\n        button.addEventListener('click', () => {\n          const tabName = button.getAttribute('data-tab');\n          tabButtons.forEach(btn => btn.classList.remove('active'));\n          tabContents.forEach(content => content.classList.remove('active'));\n          button.classList.add('active');\n          const targetTab = document.getElementById(tabName);\n          if (targetTab) {\n            targetTab.classList.add('active');\n          }\n        });\n      });\n    };\n\n    // Executar setup depois que o componente for montado\n    setupTabs();\n\n    // Tamb√©m podemos observar quando o modal √© aberto\n    const observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.target.classList.contains('aberto')) {\n          setupTabs();\n        }\n      });\n    });\n    const modalElement = document.getElementById('modal-perfil');\n    if (modalElement) {\n      observer.observe(modalElement, {\n        attributes: true,\n        attributeFilter: ['class']\n      });\n    }\n    return () => {\n      observer.disconnect();\n    };\n  }, [currentPlayer, favorites]);\n  const voltarInicio = () => {\n    navigate('/');\n  };\n\n  // Adicionar uma conquista\n  const addAchievement = useCallback((id, title) => {\n    if (!achievements.some(a => a.id === id)) {\n      const newAchievement = {\n        id,\n        title,\n        date: new Date().toISOString()\n      };\n      const updatedAchievements = [...achievements, newAchievement];\n      setAchievements(updatedAchievements);\n      if (currentPlayer) {\n        localStorage.setItem(`achievements_${currentPlayer.id}`, JSON.stringify(updatedAchievements));\n      }\n\n      // Mostrar notifica√ß√£o\n      showAchievementNotification(title);\n    }\n  }, [achievements, currentPlayer]);\n\n  // Mostrar notifica√ß√£o de conquista\n  const showAchievementNotification = title => {\n    // Criar elemento de notifica√ß√£o\n    const notification = document.createElement('div');\n    notification.className = 'achievement-notification';\n    notification.innerHTML = `\n      <div class=\"achievement-icon\">\n        <span role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n      </div>\n      <div class=\"achievement-content\">\n        <div class=\"achievement-title\">Conquista Desbloqueada!</div>\n        <div class=\"achievement-desc\">${title}</div>\n      </div>\n    `;\n\n    // Adicionar ao DOM\n    document.body.appendChild(notification);\n\n    // Vibrar o dispositivo se a API estiver dispon√≠vel\n    if ('vibrate' in navigator) {\n      navigator.vibrate([100, 50, 100, 50, 100]);\n    }\n\n    // Reproduzir som de conquista se permitido\n    const achievementSound = new Audio('/sounds/achievement.mp3');\n    achievementSound.play().catch(e => console.log('Som n√£o reproduzido:', e));\n\n    // Animar entrada\n    setTimeout(() => {\n      notification.classList.add('show');\n    }, 10);\n\n    // Remover ap√≥s alguns segundos\n    setTimeout(() => {\n      notification.classList.remove('show');\n      setTimeout(() => {\n        document.body.removeChild(notification);\n      }, 500);\n    }, 3000);\n  };\n\n  // Adicionar uma mensagem aos favoritos\n  const addToFavorites = () => {\n    if (!cartaSelecionada || !currentPlayer) return;\n\n    // Verificar se j√° est√° nos favoritos\n    if (!favorites.includes(cartaSelecionada)) {\n      const updatedFavorites = [...favorites, cartaSelecionada];\n      setFavorites(updatedFavorites);\n\n      // Salvar no localStorage\n      localStorage.setItem(`favorites_${currentPlayer.id}`, JSON.stringify(updatedFavorites));\n\n      // Vibrar o dispositivo se a API estiver dispon√≠vel\n      if ('vibrate' in navigator) {\n        navigator.vibrate([50, 50, 50]);\n      }\n\n      // Verificar se √© a primeira mensagem favoritada (conquista)\n      if (updatedFavorites.length === 1 && !achievements.some(a => a.id === 'first_favorite')) {\n        addAchievement('first_favorite', 'Primeira Reflex√£o Favorita');\n      }\n    }\n  };\n\n  // Remover item dos favoritos\n  const removerFavorito = useCallback(index => {\n    if (!currentPlayer) return;\n\n    // Cria uma nova lista de favoritos sem o item selecionado\n    const novosFavoritos = [...favorites];\n    novosFavoritos.splice(index, 1);\n    setFavorites(novosFavoritos);\n\n    // Atualiza no localStorage\n    localStorage.setItem(`favorites_${currentPlayer.id}`, JSON.stringify(novosFavoritos));\n\n    // Feedback t√°til opcional\n    if ('vibrate' in navigator) {\n      navigator.vibrate(100);\n    }\n  }, [currentPlayer, favorites]);\n\n  // Compartilhar mensagem atual\n  const shareMessage = () => {\n    if (!cartaSelecionada) return;\n    if (navigator.share) {\n      navigator.share({\n        title: 'Roleta de Reflex√µes',\n        text: `\"${cartaSelecionada}\" - Reflita sobre isso com sua fam√≠lia! #RoletaDeReflexoes`,\n        url: window.location.href\n      }).then(() => {\n        // Conquista de compartilhamento\n        if (!achievements.some(a => a.id === 'first_share')) {\n          addAchievement('first_share', 'Compartilhou uma Reflex√£o');\n        }\n      }).catch(error => console.log('Erro ao compartilhar:', error));\n    } else {\n      alert('Seu navegador n√£o suporta compartilhamento direto.');\n    }\n  };\n\n  // Fun√ß√£o para limpar as conquistas\n  const limparConquistas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as suas conquistas?')) {\n      setAchievements([]);\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 50, 100]);\n      }\n    }\n  };\n\n  // Fun√ß√£o para limpar os favoritos\n  const limparFavoritos = () => {\n    if (window.confirm('Tem certeza que deseja remover todas as reflex√µes favoritas?')) {\n      setFavorites([]);\n      if (currentPlayer) {\n        localStorage.removeItem(`favorites_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 50, 100]);\n      }\n    }\n  };\n\n  // Fun√ß√£o para limpar todas as estat√≠sticas\n  const limparEstatisticas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as estat√≠sticas deste perfil?')) {\n      // Limpar conquistas\n      setAchievements([]);\n      // Limpar favoritos\n      setFavorites([]);\n      // Limpar contagem de giros\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n        localStorage.removeItem(`favorites_${currentPlayer.id}`);\n        localStorage.removeItem(`spins_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 100, 100, 100]);\n      }\n    }\n  };\n\n  // Verificar conquistas quando a roleta parar\n  useEffect(() => {\n    if (cartaSelecionada && currentPlayer) {\n      // Verificar conquista de primeira reflex√£o\n      if (!achievements.some(a => a.id === 'first_spin')) {\n        addAchievement('first_spin', 'Primeira Reflex√£o');\n      }\n\n      // Verificar o n√∫mero de giros (salvo no localStorage)\n      const spinCount = parseInt(localStorage.getItem(`spins_${currentPlayer.id}`) || '0') + 1;\n      localStorage.setItem(`spins_${currentPlayer.id}`, spinCount.toString());\n\n      // Conquistas baseadas em n√∫mero de giros\n      if (spinCount === 10 && !achievements.some(a => a.id === 'ten_spins')) {\n        addAchievement('ten_spins', 'Dez Reflex√µes');\n      } else if (spinCount === 50 && !achievements.some(a => a.id === 'fifty_spins')) {\n        addAchievement('fifty_spins', 'Cinquenta Reflex√µes');\n      }\n    }\n  }, [cartaSelecionada, currentPlayer, achievements, addAchievement]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }\n  }, showIntro && currentPlayer && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, \"Ol\\xE1, \", currentPlayer.name, \"!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, \"Pronto para refletir e compartilhar momentos especiais?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `avatar avatar-${currentPlayer.avatar || 1} avatar-large`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"botao-voltar\",\n    onClick: voltarInicio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"botao-voltar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, \"\\u2190\"), \" Voltar\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, \"Roleta de Reflex\\xF5es\"), currentPlayer && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `avatar avatar-${currentPlayer.avatar || 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, currentPlayer.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `jogo-area ${cartaSelecionada ? 'has-result' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controles-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SeletorCategoria, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Roleta, {\n    girar: girar,\n    angulo: angulo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Botao, {\n    texto: girar ? 'Girando...' : isShaking ? 'Agite o dispositivo' : 'Girar Roleta',\n    onClick: girarRoleta,\n    disabled: girar || isShaking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"shake-instruction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, \"Ou agite o dispositivo para girar a roleta!\")), cartaSelecionada && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resultado-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartaReflexao, {\n    mensagem: cartaSelecionada,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"acoes-carta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `acao-botao ${favorites.includes(cartaSelecionada) ? 'ativo' : ''}`,\n    onClick: addToFavorites,\n    \"aria-label\": \"Adicionar aos favoritos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"acao-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, \"\\u2665\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"acao-botao\",\n    onClick: shareMessage,\n    \"aria-label\": \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"acao-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, \"\\u2197\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"botao-conquistas\",\n    onClick: () => document.getElementById('modal-perfil').classList.add('aberto'),\n    \"aria-label\": \"Ver perfil e conquistas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"botao-conquistas-icon\",\n    role: \"img\",\n    \"aria-label\": \"Trof\\xE9u\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }\n  }, \"\\uD83C\\uDFC6\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modal-perfil\",\n    className: \"modal-perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-conteudo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modal-fechar\",\n    onClick: () => document.getElementById('modal-perfil').classList.remove('aberto'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"perfil-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 11\n    }\n  }, currentPlayer && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `avatar avatar-${currentPlayer.avatar || 1} avatar-large`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }\n  }, currentPlayer.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"tab-button active\",\n    \"data-tab\": \"conquistas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, \"Conquistas\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"tab-button\",\n    \"data-tab\": \"favoritos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }, \"Favoritos\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"tab-button\",\n    \"data-tab\": \"configuracoes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, \"Configura\\xE7\\xF5es\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content active\",\n    id: \"conquistas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }, achievements.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensagem-vazia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }, \"Continue jogando para desbloquear conquistas!\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lista-conquistas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, achievements.map(achievement => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conquista-item\",\n    key: achievement.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conquista-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Trof\\xE9u\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 23\n    }\n  }, \"\\uD83C\\uDFC6\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conquista-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 23\n    }\n  }, achievement.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 23\n    }\n  }, new Date(achievement.date).toLocaleDateString())))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    id: \"favoritos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, favorites.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensagem-vazia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, \"Marque reflex\\xF5es como favoritas para v\\xEA-las aqui!\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lista-favoritos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }, favorites.map((fav, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorito-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, \"\\\"\", fav, \"\\\"\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"favorito-remover\",\n    onClick: () => removerFavorito(index),\n    \"aria-label\": \"Remover dos favoritos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Remover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 23\n    }\n  }, \"\\xD7\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    id: \"configuracoes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"config-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"config-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 15\n    }\n  }, \"Gerenciar dados do perfil\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"config-button\",\n    onClick: limparConquistas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"config-icon\",\n    role: \"img\",\n    \"aria-label\": \"Trof\\xE9u\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDFC6\"), \"Limpar todas as conquistas\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"config-button\",\n    onClick: limparFavoritos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"config-icon\",\n    role: \"img\",\n    \"aria-label\": \"Cora\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 17\n    }\n  }, \"\\u2665\"), \"Remover todos os favoritos\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"config-button danger\",\n    onClick: limparEstatisticas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"config-icon\",\n    role: \"img\",\n    \"aria-label\": \"Aten\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }, \"\\u26A0\\uFE0F\"), \"Limpar todos os dados do perfil\"))))));\n};\nexport default Home;","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","useNavigate","Roleta","SeletorCategoria","CartaReflexao","Botao","useRoleta","MensagensContext","Home","girar","angulo","girarRoleta","cartaSelecionada","navigate","currentPlayer","setCurrentPlayer","showIntro","setShowIntro","achievements","setAchievements","favorites","setFavorites","isShaking","setIsShaking","handleDeviceMotion","event","acceleration","accelerationIncludingGravity","movement","Math","abs","x","y","z","navigator","vibrate","setTimeout","player","localStorage","getItem","JSON","parse","savedAchievements","id","savedFavorites","window","addEventListener","removeEventListener","setupTabs","tabButtons","document","querySelectorAll","tabContents","forEach","button","tabName","getAttribute","btn","classList","remove","content","add","targetTab","getElementById","observer","MutationObserver","mutations","mutation","target","contains","modalElement","observe","attributes","attributeFilter","disconnect","voltarInicio","addAchievement","title","some","a","newAchievement","date","Date","toISOString","updatedAchievements","setItem","stringify","showAchievementNotification","notification","createElement","className","innerHTML","body","appendChild","achievementSound","Audio","play","catch","e","console","log","removeChild","addToFavorites","includes","updatedFavorites","length","removerFavorito","index","novosFavoritos","splice","shareMessage","share","text","url","location","href","then","error","alert","limparConquistas","confirm","removeItem","limparFavoritos","limparEstatisticas","spinCount","parseInt","toString","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","avatar","onClick","texto","disabled","mensagem","role","Fragment","map","achievement","key","toLocaleDateString","fav"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/pages/Home/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Roleta from '../../components/Roleta';\nimport SeletorCategoria from '../../components/SeletorCategoria';\nimport CartaReflexao from '../../components/CartaReflexao';\nimport Botao from '../../components/Botao';\nimport { useRoleta } from '../../hooks/useRoleta';\nimport { MensagensContext } from '../../context/MensagensContext';\nimport './Home.css';\n\nconst Home = () => {\n  const { girar, angulo, girarRoleta } = useRoleta();\n  const { cartaSelecionada } = useContext(MensagensContext);\n  const navigate = useNavigate();\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [showIntro, setShowIntro] = useState(true);\n  const [achievements, setAchievements] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [isShaking, setIsShaking] = useState(false);\n\n  // Detectar agita√ß√£o do dispositivo para girar roleta - definido com useCallback\n  const handleDeviceMotion = useCallback((event) => {\n    const acceleration = event.accelerationIncludingGravity;\n    \n    if (!acceleration) return;\n    \n    const movement = \n      Math.abs(acceleration.x) + \n      Math.abs(acceleration.y) + \n      Math.abs(acceleration.z);\n    \n    // Se movimento for maior que limite e n√£o estiver girando\n    if (movement > 25 && !girar && !isShaking) {\n      setIsShaking(true);\n      \n      // Vibrar o dispositivo se a API estiver dispon√≠vel\n      if ('vibrate' in navigator) {\n        navigator.vibrate(200);\n      }\n      \n      // Girar a roleta\n      girarRoleta();\n      \n      // Resetar estado ap√≥s um tempo\n      setTimeout(() => setIsShaking(false), 1000);\n    }\n  }, [girar, girarRoleta, isShaking]);\n\n  // Carregar dados do jogador e inicializar estado\n  useEffect(() => {\n    // Verificar se h√° um jogador atual\n    const player = localStorage.getItem('currentPlayer');\n    \n    if (player) {\n      setCurrentPlayer(JSON.parse(player));\n    } else {\n      // Redirecionar para a tela inicial se n√£o tiver jogador\n      navigate('/');\n      return;\n    }\n\n    // Carregar realiza√ß√µes do jogador\n    const savedAchievements = localStorage.getItem(`achievements_${JSON.parse(player).id}`);\n    if (savedAchievements) {\n      setAchievements(JSON.parse(savedAchievements));\n    }\n\n    // Carregar favoritos do jogador\n    const savedFavorites = localStorage.getItem(`favorites_${JSON.parse(player).id}`);\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n\n    // Mostrar anima√ß√£o de introdu√ß√£o apenas na primeira vez\n    setTimeout(() => {\n      setShowIntro(false);\n    }, 2000);\n\n    // Adicionar evento de vibra√ß√£o ao girar\n    window.addEventListener(\"devicemotion\", handleDeviceMotion);\n    \n    return () => {\n      window.removeEventListener(\"devicemotion\", handleDeviceMotion);\n    };\n  }, [navigate, handleDeviceMotion]);\n\n  // Fun√ß√£o para configurar as tabs do modal\n  useEffect(() => {\n    // Fun√ß√£o para configurar os controladores de abas\n    const setupTabs = () => {\n      const tabButtons = document.querySelectorAll('.tab-button');\n      const tabContents = document.querySelectorAll('.tab-content');\n      \n      tabButtons.forEach(button => {\n        button.addEventListener('click', () => {\n          const tabName = button.getAttribute('data-tab');\n          \n          tabButtons.forEach(btn => btn.classList.remove('active'));\n          tabContents.forEach(content => content.classList.remove('active'));\n          \n          button.classList.add('active');\n          const targetTab = document.getElementById(tabName);\n          if (targetTab) {\n            targetTab.classList.add('active');\n          }\n        });\n      });\n    };\n\n    // Executar setup depois que o componente for montado\n    setupTabs();\n\n    // Tamb√©m podemos observar quando o modal √© aberto\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.target.classList.contains('aberto')) {\n          setupTabs();\n        }\n      });\n    });\n\n    const modalElement = document.getElementById('modal-perfil');\n    if (modalElement) {\n      observer.observe(modalElement, { attributes: true, attributeFilter: ['class'] });\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [currentPlayer, favorites]);\n\n  const voltarInicio = () => {\n    navigate('/');\n  };\n\n  // Adicionar uma conquista\n  const addAchievement = useCallback((id, title) => {\n    if (!achievements.some(a => a.id === id)) {\n      const newAchievement = { id, title, date: new Date().toISOString() };\n      const updatedAchievements = [...achievements, newAchievement];\n      \n      setAchievements(updatedAchievements);\n      if (currentPlayer) {\n        localStorage.setItem(`achievements_${currentPlayer.id}`, JSON.stringify(updatedAchievements));\n      }\n      \n      // Mostrar notifica√ß√£o\n      showAchievementNotification(title);\n    }\n  }, [achievements, currentPlayer]);\n\n  // Mostrar notifica√ß√£o de conquista\n  const showAchievementNotification = (title) => {\n    // Criar elemento de notifica√ß√£o\n    const notification = document.createElement('div');\n    notification.className = 'achievement-notification';\n    notification.innerHTML = `\n      <div class=\"achievement-icon\">\n        <span role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n      </div>\n      <div class=\"achievement-content\">\n        <div class=\"achievement-title\">Conquista Desbloqueada!</div>\n        <div class=\"achievement-desc\">${title}</div>\n      </div>\n    `;\n    \n    // Adicionar ao DOM\n    document.body.appendChild(notification);\n    \n    // Vibrar o dispositivo se a API estiver dispon√≠vel\n    if ('vibrate' in navigator) {\n      navigator.vibrate([100, 50, 100, 50, 100]);\n    }\n    \n    // Reproduzir som de conquista se permitido\n    const achievementSound = new Audio('/sounds/achievement.mp3');\n    achievementSound.play().catch(e => console.log('Som n√£o reproduzido:', e));\n    \n    // Animar entrada\n    setTimeout(() => {\n      notification.classList.add('show');\n    }, 10);\n    \n    // Remover ap√≥s alguns segundos\n    setTimeout(() => {\n      notification.classList.remove('show');\n      setTimeout(() => {\n        document.body.removeChild(notification);\n      }, 500);\n    }, 3000);\n  };\n\n  // Adicionar uma mensagem aos favoritos\n  const addToFavorites = () => {\n    if (!cartaSelecionada || !currentPlayer) return;\n    \n    // Verificar se j√° est√° nos favoritos\n    if (!favorites.includes(cartaSelecionada)) {\n      const updatedFavorites = [...favorites, cartaSelecionada];\n      setFavorites(updatedFavorites);\n      \n      // Salvar no localStorage\n      localStorage.setItem(`favorites_${currentPlayer.id}`, JSON.stringify(updatedFavorites));\n      \n      // Vibrar o dispositivo se a API estiver dispon√≠vel\n      if ('vibrate' in navigator) {\n        navigator.vibrate([50, 50, 50]);\n      }\n\n      // Verificar se √© a primeira mensagem favoritada (conquista)\n      if (updatedFavorites.length === 1 && !achievements.some(a => a.id === 'first_favorite')) {\n        addAchievement('first_favorite', 'Primeira Reflex√£o Favorita');\n      }\n    }\n  };\n\n  // Remover item dos favoritos\n  const removerFavorito = useCallback((index) => {\n    if (!currentPlayer) return;\n    \n    // Cria uma nova lista de favoritos sem o item selecionado\n    const novosFavoritos = [...favorites];\n    novosFavoritos.splice(index, 1);\n    setFavorites(novosFavoritos);\n    \n    // Atualiza no localStorage\n    localStorage.setItem(`favorites_${currentPlayer.id}`, JSON.stringify(novosFavoritos));\n    \n    // Feedback t√°til opcional\n    if ('vibrate' in navigator) {\n      navigator.vibrate(100);\n    }\n  }, [currentPlayer, favorites]);\n\n  // Compartilhar mensagem atual\n  const shareMessage = () => {\n    if (!cartaSelecionada) return;\n    \n    if (navigator.share) {\n      navigator.share({\n        title: 'Roleta de Reflex√µes',\n        text: `\"${cartaSelecionada}\" - Reflita sobre isso com sua fam√≠lia! #RoletaDeReflexoes`,\n        url: window.location.href\n      })\n      .then(() => {\n        // Conquista de compartilhamento\n        if (!achievements.some(a => a.id === 'first_share')) {\n          addAchievement('first_share', 'Compartilhou uma Reflex√£o');\n        }\n      })\n      .catch(error => console.log('Erro ao compartilhar:', error));\n    } else {\n      alert('Seu navegador n√£o suporta compartilhamento direto.');\n    }\n  };\n\n  // Fun√ß√£o para limpar as conquistas\n  const limparConquistas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as suas conquistas?')) {\n      setAchievements([]);\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 50, 100]);\n      }\n    }\n  };\n\n  // Fun√ß√£o para limpar os favoritos\n  const limparFavoritos = () => {\n    if (window.confirm('Tem certeza que deseja remover todas as reflex√µes favoritas?')) {\n      setFavorites([]);\n      if (currentPlayer) {\n        localStorage.removeItem(`favorites_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 50, 100]);\n      }\n    }\n  };\n\n  // Fun√ß√£o para limpar todas as estat√≠sticas\n  const limparEstatisticas = () => {\n    if (window.confirm('Tem certeza que deseja limpar todas as estat√≠sticas deste perfil?')) {\n      // Limpar conquistas\n      setAchievements([]);\n      // Limpar favoritos\n      setFavorites([]);\n      // Limpar contagem de giros\n      if (currentPlayer) {\n        localStorage.removeItem(`achievements_${currentPlayer.id}`);\n        localStorage.removeItem(`favorites_${currentPlayer.id}`);\n        localStorage.removeItem(`spins_${currentPlayer.id}`);\n      }\n      // Feedback t√°til\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 100, 100, 100]);\n      }\n    }\n  };\n\n  // Verificar conquistas quando a roleta parar\n  useEffect(() => {\n    if (cartaSelecionada && currentPlayer) {\n      // Verificar conquista de primeira reflex√£o\n      if (!achievements.some(a => a.id === 'first_spin')) {\n        addAchievement('first_spin', 'Primeira Reflex√£o');\n      }\n      \n      // Verificar o n√∫mero de giros (salvo no localStorage)\n      const spinCount = parseInt(localStorage.getItem(`spins_${currentPlayer.id}`) || '0') + 1;\n      localStorage.setItem(`spins_${currentPlayer.id}`, spinCount.toString());\n      \n      // Conquistas baseadas em n√∫mero de giros\n      if (spinCount === 10 && !achievements.some(a => a.id === 'ten_spins')) {\n        addAchievement('ten_spins', 'Dez Reflex√µes');\n      } else if (spinCount === 50 && !achievements.some(a => a.id === 'fifty_spins')) {\n        addAchievement('fifty_spins', 'Cinquenta Reflex√µes');\n      }\n    }\n  }, [cartaSelecionada, currentPlayer, achievements, addAchievement]);\n\n  return (\n    <div className=\"home-container\">\n      {showIntro && currentPlayer && (\n        <div className=\"welcome-overlay\">\n          <div className=\"welcome-content\">\n            <h2>Ol√°, {currentPlayer.name}!</h2>\n            <p>Pronto para refletir e compartilhar momentos especiais?</p>\n            <div className={`avatar avatar-${currentPlayer.avatar || 1} avatar-large`}></div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"header\">\n        <button className=\"botao-voltar\" onClick={voltarInicio}>\n          <span className=\"botao-voltar-icon\">‚Üê</span> Voltar\n        </button>\n        <h1>Roleta de Reflex√µes</h1>\n        \n        {currentPlayer && (\n          <div className=\"player-info\">\n            <div className={`avatar avatar-${currentPlayer.avatar || 1}`}></div>\n            <span className=\"player-name\">{currentPlayer.name}</span>\n          </div>\n        )}\n      </div>\n      \n      <div className={`jogo-area ${cartaSelecionada ? 'has-result' : ''}`}>\n        <div className=\"controles-area\">\n          <SeletorCategoria />\n          \n          <Roleta girar={girar} angulo={angulo} />\n          \n          <Botao \n            texto={girar ? 'Girando...' : (isShaking ? 'Agite o dispositivo' : 'Girar Roleta')} \n            onClick={girarRoleta} \n            disabled={girar || isShaking} \n          />\n          \n          {/* Instru√ß√£o para agitar o dispositivo */}\n          <p className=\"shake-instruction\">\n            Ou agite o dispositivo para girar a roleta!\n          </p>\n        </div>\n        \n        {cartaSelecionada && (\n          <div className=\"resultado-area\">\n            <CartaReflexao mensagem={cartaSelecionada} />\n            \n            <div className=\"acoes-carta\">\n              <button \n                className={`acao-botao ${favorites.includes(cartaSelecionada) ? 'ativo' : ''}`} \n                onClick={addToFavorites}\n                aria-label=\"Adicionar aos favoritos\"\n              >\n                <span className=\"acao-icon\">‚ô•</span>\n              </button>\n              \n              <button \n                className=\"acao-botao\" \n                onClick={shareMessage}\n                aria-label=\"Compartilhar\"\n              >\n                <span className=\"acao-icon\">‚Üó</span>\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Bot√£o para abrir modal de realiza√ß√µes e favoritos */}\n      <button \n        className=\"botao-conquistas\"\n        onClick={() => document.getElementById('modal-perfil').classList.add('aberto')}\n        aria-label=\"Ver perfil e conquistas\"\n      >\n        <span className=\"botao-conquistas-icon\" role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n      </button>\n      \n      {/* Modal de perfil com conquistas e favoritos */}\n      <div id=\"modal-perfil\" className=\"modal-perfil\">\n        <div className=\"modal-conteudo\">\n          <button \n            className=\"modal-fechar\"\n            onClick={() => document.getElementById('modal-perfil').classList.remove('aberto')}\n          >\n            √ó\n          </button>\n          \n          <div className=\"perfil-header\">\n            {currentPlayer && (\n              <>\n                <div className={`avatar avatar-${currentPlayer.avatar || 1} avatar-large`}></div>\n                <h2>{currentPlayer.name}</h2>\n              </>\n            )}\n          </div>\n          \n          <div className=\"tabs\">\n            <button className=\"tab-button active\" data-tab=\"conquistas\">Conquistas</button>\n            <button className=\"tab-button\" data-tab=\"favoritos\">Favoritos</button>\n            <button className=\"tab-button\" data-tab=\"configuracoes\">Configura√ß√µes</button>\n          </div>\n          \n          <div className=\"tab-content active\" id=\"conquistas\">\n            {achievements.length === 0 ? (\n              <p className=\"mensagem-vazia\">Continue jogando para desbloquear conquistas!</p>\n            ) : (\n              <div className=\"lista-conquistas\">\n                {achievements.map(achievement => (\n                  <div className=\"conquista-item\" key={achievement.id}>\n                    <div className=\"conquista-icon\">\n                      <span role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n                    </div>\n                    <div className=\"conquista-info\">\n                      <h3>{achievement.title}</h3>\n                      <p>{new Date(achievement.date).toLocaleDateString()}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"tab-content\" id=\"favoritos\">\n            {favorites.length === 0 ? (\n              <p className=\"mensagem-vazia\">Marque reflex√µes como favoritas para v√™-las aqui!</p>\n            ) : (\n              <div className=\"lista-favoritos\">\n                {favorites.map((fav, index) => (\n                  <div className=\"favorito-item\" key={index}>\n                    <p>\"{fav}\"</p>\n                    <button \n                      className=\"favorito-remover\"\n                      onClick={() => removerFavorito(index)}\n                      aria-label=\"Remover dos favoritos\"\n                    >\n                      <span role=\"img\" aria-label=\"Remover\">√ó</span>\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"tab-content\" id=\"configuracoes\">\n            <div className=\"config-section\">\n              <h3 className=\"config-title\">Gerenciar dados do perfil</h3>\n              \n              <button \n                className=\"config-button\"\n                onClick={limparConquistas}\n              >\n                <span className=\"config-icon\" role=\"img\" aria-label=\"Trof√©u\">üèÜ</span>\n                Limpar todas as conquistas\n              </button>\n              \n              <button \n                className=\"config-button\"\n                onClick={limparFavoritos}\n              >\n                <span className=\"config-icon\" role=\"img\" aria-label=\"Cora√ß√£o\">‚ô•</span>\n                Remover todos os favoritos\n              </button>\n              \n              <button \n                className=\"config-button danger\"\n                onClick={limparEstatisticas}\n              >\n                <span className=\"config-icon\" role=\"img\" aria-label=\"Aten√ß√£o\">‚ö†Ô∏è</span>\n                Limpar todos os dados do perfil\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC3E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,OAAO,YAAY;AAEnB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGL,SAAS,CAAC,CAAC;EAClD,MAAM;IAAEM;EAAiB,CAAC,GAAGf,UAAU,CAACU,gBAAgB,CAAC;EACzD,MAAMM,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMyB,kBAAkB,GAAGxB,WAAW,CAAEyB,KAAK,IAAK;IAChD,MAAMC,YAAY,GAAGD,KAAK,CAACE,4BAA4B;IAEvD,IAAI,CAACD,YAAY,EAAE;IAEnB,MAAME,QAAQ,GACZC,IAAI,CAACC,GAAG,CAACJ,YAAY,CAACK,CAAC,CAAC,GACxBF,IAAI,CAACC,GAAG,CAACJ,YAAY,CAACM,CAAC,CAAC,GACxBH,IAAI,CAACC,GAAG,CAACJ,YAAY,CAACO,CAAC,CAAC;;IAE1B;IACA,IAAIL,QAAQ,GAAG,EAAE,IAAI,CAACnB,KAAK,IAAI,CAACa,SAAS,EAAE;MACzCC,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,IAAI,SAAS,IAAIW,SAAS,EAAE;QAC1BA,SAAS,CAACC,OAAO,CAAC,GAAG,CAAC;MACxB;;MAEA;MACAxB,WAAW,CAAC,CAAC;;MAEb;MACAyB,UAAU,CAAC,MAAMb,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC7C;EACF,CAAC,EAAE,CAACd,KAAK,EAAEE,WAAW,EAAEW,SAAS,CAAC,CAAC;;EAEnC;EACAxB,SAAS,CAAC,MAAM;IACd;IACA,MAAMuC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAEpD,IAAIF,MAAM,EAAE;MACVtB,gBAAgB,CAACyB,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAAC;IACtC,CAAC,MAAM;MACL;MACAxB,QAAQ,CAAC,GAAG,CAAC;MACb;IACF;;IAEA;IACA,MAAM6B,iBAAiB,GAAGJ,YAAY,CAACC,OAAO,CAAC,gBAAgBC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAACM,EAAE,EAAE,CAAC;IACvF,IAAID,iBAAiB,EAAE;MACrBvB,eAAe,CAACqB,IAAI,CAACC,KAAK,CAACC,iBAAiB,CAAC,CAAC;IAChD;;IAEA;IACA,MAAME,cAAc,GAAGN,YAAY,CAACC,OAAO,CAAC,aAAaC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAACM,EAAE,EAAE,CAAC;IACjF,IAAIC,cAAc,EAAE;MAClBvB,YAAY,CAACmB,IAAI,CAACC,KAAK,CAACG,cAAc,CAAC,CAAC;IAC1C;;IAEA;IACAR,UAAU,CAAC,MAAM;MACfnB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA4B,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEtB,kBAAkB,CAAC;IAE3D,OAAO,MAAM;MACXqB,MAAM,CAACE,mBAAmB,CAAC,cAAc,EAAEvB,kBAAkB,CAAC;IAChE,CAAC;EACH,CAAC,EAAE,CAACX,QAAQ,EAAEW,kBAAkB,CAAC,CAAC;;EAElC;EACA1B,SAAS,CAAC,MAAM;IACd;IACA,MAAMkD,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC;MAC3D,MAAMC,WAAW,GAAGF,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC;MAE7DF,UAAU,CAACI,OAAO,CAACC,MAAM,IAAI;QAC3BA,MAAM,CAACR,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACrC,MAAMS,OAAO,GAAGD,MAAM,CAACE,YAAY,CAAC,UAAU,CAAC;UAE/CP,UAAU,CAACI,OAAO,CAACI,GAAG,IAAIA,GAAG,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;UACzDP,WAAW,CAACC,OAAO,CAACO,OAAO,IAAIA,OAAO,CAACF,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;UAElEL,MAAM,CAACI,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;UAC9B,MAAMC,SAAS,GAAGZ,QAAQ,CAACa,cAAc,CAACR,OAAO,CAAC;UAClD,IAAIO,SAAS,EAAE;YACbA,SAAS,CAACJ,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;UACnC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;;IAED;IACAb,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMgB,QAAQ,GAAG,IAAIC,gBAAgB,CAAEC,SAAS,IAAK;MACnDA,SAAS,CAACb,OAAO,CAAEc,QAAQ,IAAK;QAC9B,IAAIA,QAAQ,CAACC,MAAM,CAACV,SAAS,CAACW,QAAQ,CAAC,QAAQ,CAAC,EAAE;UAChDrB,SAAS,CAAC,CAAC;QACb;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMsB,YAAY,GAAGpB,QAAQ,CAACa,cAAc,CAAC,cAAc,CAAC;IAC5D,IAAIO,YAAY,EAAE;MAChBN,QAAQ,CAACO,OAAO,CAACD,YAAY,EAAE;QAAEE,UAAU,EAAE,IAAI;QAAEC,eAAe,EAAE,CAAC,OAAO;MAAE,CAAC,CAAC;IAClF;IAEA,OAAO,MAAM;MACXT,QAAQ,CAACU,UAAU,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAAC5D,aAAa,EAAEM,SAAS,CAAC,CAAC;EAE9B,MAAMuD,YAAY,GAAGA,CAAA,KAAM;IACzB9D,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;;EAED;EACA,MAAM+D,cAAc,GAAG5E,WAAW,CAAC,CAAC2C,EAAE,EAAEkC,KAAK,KAAK;IAChD,IAAI,CAAC3D,YAAY,CAAC4D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAKA,EAAE,CAAC,EAAE;MACxC,MAAMqC,cAAc,GAAG;QAAErC,EAAE;QAAEkC,KAAK;QAAEI,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAAE,CAAC;MACpE,MAAMC,mBAAmB,GAAG,CAAC,GAAGlE,YAAY,EAAE8D,cAAc,CAAC;MAE7D7D,eAAe,CAACiE,mBAAmB,CAAC;MACpC,IAAItE,aAAa,EAAE;QACjBwB,YAAY,CAAC+C,OAAO,CAAC,gBAAgBvE,aAAa,CAAC6B,EAAE,EAAE,EAAEH,IAAI,CAAC8C,SAAS,CAACF,mBAAmB,CAAC,CAAC;MAC/F;;MAEA;MACAG,2BAA2B,CAACV,KAAK,CAAC;IACpC;EACF,CAAC,EAAE,CAAC3D,YAAY,EAAEJ,aAAa,CAAC,CAAC;;EAEjC;EACA,MAAMyE,2BAA2B,GAAIV,KAAK,IAAK;IAC7C;IACA,MAAMW,YAAY,GAAGtC,QAAQ,CAACuC,aAAa,CAAC,KAAK,CAAC;IAClDD,YAAY,CAACE,SAAS,GAAG,0BAA0B;IACnDF,YAAY,CAACG,SAAS,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA,wCAAwCd,KAAK;AAC7C;AACA,KAAK;;IAED;IACA3B,QAAQ,CAAC0C,IAAI,CAACC,WAAW,CAACL,YAAY,CAAC;;IAEvC;IACA,IAAI,SAAS,IAAItD,SAAS,EAAE;MAC1BA,SAAS,CAACC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC5C;;IAEA;IACA,MAAM2D,gBAAgB,GAAG,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC7DD,gBAAgB,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,CAAC,CAAC,CAAC;;IAE1E;IACA9D,UAAU,CAAC,MAAM;MACfoD,YAAY,CAAC9B,SAAS,CAACG,GAAG,CAAC,MAAM,CAAC;IACpC,CAAC,EAAE,EAAE,CAAC;;IAEN;IACAzB,UAAU,CAAC,MAAM;MACfoD,YAAY,CAAC9B,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;MACrCvB,UAAU,CAAC,MAAM;QACfc,QAAQ,CAAC0C,IAAI,CAACS,WAAW,CAACb,YAAY,CAAC;MACzC,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC1F,gBAAgB,IAAI,CAACE,aAAa,EAAE;;IAEzC;IACA,IAAI,CAACM,SAAS,CAACmF,QAAQ,CAAC3F,gBAAgB,CAAC,EAAE;MACzC,MAAM4F,gBAAgB,GAAG,CAAC,GAAGpF,SAAS,EAAER,gBAAgB,CAAC;MACzDS,YAAY,CAACmF,gBAAgB,CAAC;;MAE9B;MACAlE,YAAY,CAAC+C,OAAO,CAAC,aAAavE,aAAa,CAAC6B,EAAE,EAAE,EAAEH,IAAI,CAAC8C,SAAS,CAACkB,gBAAgB,CAAC,CAAC;;MAEvF;MACA,IAAI,SAAS,IAAItE,SAAS,EAAE;QAC1BA,SAAS,CAACC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACjC;;MAEA;MACA,IAAIqE,gBAAgB,CAACC,MAAM,KAAK,CAAC,IAAI,CAACvF,YAAY,CAAC4D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAK,gBAAgB,CAAC,EAAE;QACvFiC,cAAc,CAAC,gBAAgB,EAAE,4BAA4B,CAAC;MAChE;IACF;EACF,CAAC;;EAED;EACA,MAAM8B,eAAe,GAAG1G,WAAW,CAAE2G,KAAK,IAAK;IAC7C,IAAI,CAAC7F,aAAa,EAAE;;IAEpB;IACA,MAAM8F,cAAc,GAAG,CAAC,GAAGxF,SAAS,CAAC;IACrCwF,cAAc,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC/BtF,YAAY,CAACuF,cAAc,CAAC;;IAE5B;IACAtE,YAAY,CAAC+C,OAAO,CAAC,aAAavE,aAAa,CAAC6B,EAAE,EAAE,EAAEH,IAAI,CAAC8C,SAAS,CAACsB,cAAc,CAAC,CAAC;;IAErF;IACA,IAAI,SAAS,IAAI1E,SAAS,EAAE;MAC1BA,SAAS,CAACC,OAAO,CAAC,GAAG,CAAC;IACxB;EACF,CAAC,EAAE,CAACrB,aAAa,EAAEM,SAAS,CAAC,CAAC;;EAE9B;EACA,MAAM0F,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAAClG,gBAAgB,EAAE;IAEvB,IAAIsB,SAAS,CAAC6E,KAAK,EAAE;MACnB7E,SAAS,CAAC6E,KAAK,CAAC;QACdlC,KAAK,EAAE,qBAAqB;QAC5BmC,IAAI,EAAE,IAAIpG,gBAAgB,4DAA4D;QACtFqG,GAAG,EAAEpE,MAAM,CAACqE,QAAQ,CAACC;MACvB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;QACV;QACA,IAAI,CAAClG,YAAY,CAAC4D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAK,aAAa,CAAC,EAAE;UACnDiC,cAAc,CAAC,aAAa,EAAE,2BAA2B,CAAC;QAC5D;MACF,CAAC,CAAC,CACDqB,KAAK,CAACoB,KAAK,IAAIlB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEiB,KAAK,CAAC,CAAC;IAC9D,CAAC,MAAM;MACLC,KAAK,CAAC,oDAAoD,CAAC;IAC7D;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI1E,MAAM,CAAC2E,OAAO,CAAC,yDAAyD,CAAC,EAAE;MAC7ErG,eAAe,CAAC,EAAE,CAAC;MACnB,IAAIL,aAAa,EAAE;QACjBwB,YAAY,CAACmF,UAAU,CAAC,gBAAgB3G,aAAa,CAAC6B,EAAE,EAAE,CAAC;MAC7D;MACA;MACA,IAAI,SAAS,IAAIT,SAAS,EAAE;QAC1BA,SAAS,CAACC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;MACnC;IACF;EACF,CAAC;;EAED;EACA,MAAMuF,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI7E,MAAM,CAAC2E,OAAO,CAAC,8DAA8D,CAAC,EAAE;MAClFnG,YAAY,CAAC,EAAE,CAAC;MAChB,IAAIP,aAAa,EAAE;QACjBwB,YAAY,CAACmF,UAAU,CAAC,aAAa3G,aAAa,CAAC6B,EAAE,EAAE,CAAC;MAC1D;MACA;MACA,IAAI,SAAS,IAAIT,SAAS,EAAE;QAC1BA,SAAS,CAACC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;MACnC;IACF;EACF,CAAC;;EAED;EACA,MAAMwF,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI9E,MAAM,CAAC2E,OAAO,CAAC,mEAAmE,CAAC,EAAE;MACvF;MACArG,eAAe,CAAC,EAAE,CAAC;MACnB;MACAE,YAAY,CAAC,EAAE,CAAC;MAChB;MACA,IAAIP,aAAa,EAAE;QACjBwB,YAAY,CAACmF,UAAU,CAAC,gBAAgB3G,aAAa,CAAC6B,EAAE,EAAE,CAAC;QAC3DL,YAAY,CAACmF,UAAU,CAAC,aAAa3G,aAAa,CAAC6B,EAAE,EAAE,CAAC;QACxDL,YAAY,CAACmF,UAAU,CAAC,SAAS3G,aAAa,CAAC6B,EAAE,EAAE,CAAC;MACtD;MACA;MACA,IAAI,SAAS,IAAIT,SAAS,EAAE;QAC1BA,SAAS,CAACC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;MACzC;IACF;EACF,CAAC;;EAED;EACArC,SAAS,CAAC,MAAM;IACd,IAAIc,gBAAgB,IAAIE,aAAa,EAAE;MACrC;MACA,IAAI,CAACI,YAAY,CAAC4D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAK,YAAY,CAAC,EAAE;QAClDiC,cAAc,CAAC,YAAY,EAAE,mBAAmB,CAAC;MACnD;;MAEA;MACA,MAAMgD,SAAS,GAAGC,QAAQ,CAACvF,YAAY,CAACC,OAAO,CAAC,SAASzB,aAAa,CAAC6B,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC;MACxFL,YAAY,CAAC+C,OAAO,CAAC,SAASvE,aAAa,CAAC6B,EAAE,EAAE,EAAEiF,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC;;MAEvE;MACA,IAAIF,SAAS,KAAK,EAAE,IAAI,CAAC1G,YAAY,CAAC4D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAK,WAAW,CAAC,EAAE;QACrEiC,cAAc,CAAC,WAAW,EAAE,eAAe,CAAC;MAC9C,CAAC,MAAM,IAAIgD,SAAS,KAAK,EAAE,IAAI,CAAC1G,YAAY,CAAC4D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAK,aAAa,CAAC,EAAE;QAC9EiC,cAAc,CAAC,aAAa,EAAE,qBAAqB,CAAC;MACtD;IACF;EACF,CAAC,EAAE,CAAChE,gBAAgB,EAAEE,aAAa,EAAEI,YAAY,EAAE0D,cAAc,CAAC,CAAC;EAEnE,oBACEhF,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5BpH,SAAS,IAAIF,aAAa,iBACzBlB,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxI,KAAA,CAAA6F,aAAA;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAK,EAACtH,aAAa,CAACuH,IAAI,EAAC,GAAK,CAAC,eACnCzI,KAAA,CAAA6F,aAAA;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,yDAA0D,CAAC,eAC9DxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAE,iBAAiB5E,aAAa,CAACwH,MAAM,IAAI,CAAC,eAAgB;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAC7E,CACF,CACN,eAEDxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBxI,KAAA,CAAA6F,aAAA;IAAQC,SAAS,EAAC,cAAc;IAAC6C,OAAO,EAAE5D,YAAa;IAAAoD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrDxI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,mBAAmB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAO,CAAC,WACtC,CAAC,eACTxI,KAAA,CAAA6F,aAAA;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,wBAAuB,CAAC,EAE3BtH,aAAa,iBACZlB,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAE,iBAAiB5E,aAAa,CAACwH,MAAM,IAAI,CAAC,EAAG;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eACpExI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,aAAa;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEtH,aAAa,CAACuH,IAAW,CACrD,CAEJ,CAAC,eAENzI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAE,aAAa9E,gBAAgB,GAAG,YAAY,GAAG,EAAE,EAAG;IAAAmH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClExI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BxI,KAAA,CAAA6F,aAAA,CAACtF,gBAAgB;IAAA4H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAEpBxI,KAAA,CAAA6F,aAAA,CAACvF,MAAM;IAACO,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAAAqH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAExCxI,KAAA,CAAA6F,aAAA,CAACpF,KAAK;IACJmI,KAAK,EAAE/H,KAAK,GAAG,YAAY,GAAIa,SAAS,GAAG,qBAAqB,GAAG,cAAgB;IACnFiH,OAAO,EAAE5H,WAAY;IACrB8H,QAAQ,EAAEhI,KAAK,IAAIa,SAAU;IAAAyG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAAC,eAGFxI,KAAA,CAAA6F,aAAA;IAAGC,SAAS,EAAC,mBAAmB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,6CAE9B,CACA,CAAC,EAELxH,gBAAgB,iBACfhB,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BxI,KAAA,CAAA6F,aAAA,CAACrF,aAAa;IAACsI,QAAQ,EAAE9H,gBAAiB;IAAAmH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAE7CxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BxI,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAE,cAActE,SAAS,CAACmF,QAAQ,CAAC3F,gBAAgB,CAAC,GAAG,OAAO,GAAG,EAAE,EAAG;IAC/E2H,OAAO,EAAEjC,cAAe;IACxB,cAAW,yBAAyB;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEpCxI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,WAAW;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAO,CAC7B,CAAC,eAETxI,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAC,YAAY;IACtB6C,OAAO,EAAEzB,YAAa;IACtB,cAAW,cAAc;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEzBxI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,WAAW;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAO,CAC7B,CACL,CACF,CAEJ,CAAC,eAGNxI,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAC,kBAAkB;IAC5B6C,OAAO,EAAEA,CAAA,KAAMrF,QAAQ,CAACa,cAAc,CAAC,cAAc,CAAC,CAACL,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAE;IAC/E,cAAW,yBAAyB;IAAAkE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEpCxI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,uBAAuB;IAACiD,IAAI,EAAC,KAAK;IAAC,cAAW,WAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAQ,CACzE,CAAC,eAGTxI,KAAA,CAAA6F,aAAA;IAAK9C,EAAE,EAAC,cAAc;IAAC+C,SAAS,EAAC,cAAc;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7CxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BxI,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAC,cAAc;IACxB6C,OAAO,EAAEA,CAAA,KAAMrF,QAAQ,CAACa,cAAc,CAAC,cAAc,CAAC,CAACL,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAE;IAAAoE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnF,MAEO,CAAC,eAETxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BtH,aAAa,iBACZlB,KAAA,CAAA6F,aAAA,CAAA7F,KAAA,CAAAgJ,QAAA,qBACEhJ,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAE,iBAAiB5E,aAAa,CAACwH,MAAM,IAAI,CAAC,eAAgB;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eACjFxI,KAAA,CAAA6F,aAAA;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtH,aAAa,CAACuH,IAAS,CAC5B,CAED,CAAC,eAENzI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBxI,KAAA,CAAA6F,aAAA;IAAQC,SAAS,EAAC,mBAAmB;IAAC,YAAS,YAAY;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CAAC,eAC/ExI,KAAA,CAAA6F,aAAA;IAAQC,SAAS,EAAC,YAAY;IAAC,YAAS,WAAW;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAAC,eACtExI,KAAA,CAAA6F,aAAA;IAAQC,SAAS,EAAC,YAAY;IAAC,YAAS,eAAe;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qBAAqB,CAC1E,CAAC,eAENxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAC/C,EAAE,EAAC,YAAY;IAAAoF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChDlH,YAAY,CAACuF,MAAM,KAAK,CAAC,gBACxB7G,KAAA,CAAA6F,aAAA;IAAGC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,+CAAgD,CAAC,gBAE/ExI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9BlH,YAAY,CAAC2H,GAAG,CAACC,WAAW,iBAC3BlJ,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAACqD,GAAG,EAAED,WAAW,CAACnG,EAAG;IAAAoF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClDxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BxI,KAAA,CAAA6F,aAAA;IAAMkD,IAAI,EAAC,KAAK;IAAC,cAAW,WAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAQ,CAC1C,CAAC,eACNxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BxI,KAAA,CAAA6F,aAAA;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKU,WAAW,CAACjE,KAAU,CAAC,eAC5BjF,KAAA,CAAA6F,aAAA;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,IAAIlD,IAAI,CAAC4D,WAAW,CAAC7D,IAAI,CAAC,CAAC+D,kBAAkB,CAAC,CAAK,CACpD,CACF,CACN,CACE,CAEJ,CAAC,eAENpJ,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAC/C,EAAE,EAAC,WAAW;IAAAoF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxChH,SAAS,CAACqF,MAAM,KAAK,CAAC,gBACrB7G,KAAA,CAAA6F,aAAA;IAAGC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,yDAAoD,CAAC,gBAEnFxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BhH,SAAS,CAACyH,GAAG,CAAC,CAACI,GAAG,EAAEtC,KAAK,kBACxB/G,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,eAAe;IAACqD,GAAG,EAAEpC,KAAM;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxCxI,KAAA,CAAA6F,aAAA;IAAAsC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,IAAC,EAACa,GAAG,EAAC,IAAI,CAAC,eACdrJ,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAC,kBAAkB;IAC5B6C,OAAO,EAAEA,CAAA,KAAM7B,eAAe,CAACC,KAAK,CAAE;IACtC,cAAW,uBAAuB;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAElCxI,KAAA,CAAA6F,aAAA;IAAMkD,IAAI,EAAC,KAAK;IAAC,cAAW,SAAS;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAO,CACvC,CACL,CACN,CACE,CAEJ,CAAC,eAENxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAC/C,EAAE,EAAC,eAAe;IAAAoF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7CxI,KAAA,CAAA6F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BxI,KAAA,CAAA6F,aAAA;IAAIC,SAAS,EAAC,cAAc;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAA6B,CAAC,eAE3DxI,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAC,eAAe;IACzB6C,OAAO,EAAEhB,gBAAiB;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE1BxI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,aAAa;IAACiD,IAAI,EAAC,KAAK;IAAC,cAAW,WAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAQ,CAAC,8BAEhE,CAAC,eAETxI,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAC,eAAe;IACzB6C,OAAO,EAAEb,eAAgB;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEzBxI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,aAAa;IAACiD,IAAI,EAAC,KAAK;IAAC,cAAW,eAAS;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAO,CAAC,8BAEhE,CAAC,eAETxI,KAAA,CAAA6F,aAAA;IACEC,SAAS,EAAC,sBAAsB;IAChC6C,OAAO,EAAEZ,kBAAmB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE5BxI,KAAA,CAAA6F,aAAA;IAAMC,SAAS,EAAC,aAAa;IAACiD,IAAI,EAAC,KAAK;IAAC,cAAW,eAAS;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAQ,CAAC,mCAEjE,CACL,CACF,CACF,CACF,CACF,CAAC;AAEV,CAAC;AAED,eAAe5H,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}