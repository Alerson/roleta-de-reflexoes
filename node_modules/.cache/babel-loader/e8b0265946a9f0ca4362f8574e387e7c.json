{"ast":null,"code":"import{useState,useContext}from'react';import{MensagensContext}from'../context/MensagensContext';export const useRoleta=()=>{const[girar,setGirar]=useState(false);const[angulo,setAngulo]=useState(0);const{selecionarCartaAleatoria}=useContext(MensagensContext);const girarRoleta=()=>{if(!girar){// Limpa carta atual\nconst novoAngulo=angulo+1080+Math.floor(Math.random()*720);setAngulo(novoAngulo);setGirar(true);// Após a animação, seleciona uma carta aleatória\nsetTimeout(()=>{selecionarCartaAleatoria();setGirar(false);},3000);// Adicione um log para debug\nconsole.log('Roleta girando, carta será selecionada em 3 segundos');}};return{girar,angulo,girarRoleta};};","map":{"version":3,"names":["useState","useContext","MensagensContext","useRoleta","girar","setGirar","angulo","setAngulo","selecionarCartaAleatoria","girarRoleta","novoAngulo","Math","floor","random","setTimeout","console","log"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/hooks/useRoleta.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { MensagensContext } from '../context/MensagensContext';\n\nexport const useRoleta = () => {\n  const [girar, setGirar] = useState(false);\n  const [angulo, setAngulo] = useState(0);\n  const { selecionarCartaAleatoria } = useContext(MensagensContext);\n\n  const girarRoleta = () => {\n    if (!girar) {\n      // Limpa carta atual\n      const novoAngulo = angulo + 1080 + Math.floor(Math.random() * 720);\n      setAngulo(novoAngulo);\n      setGirar(true);\n      \n      // Após a animação, seleciona uma carta aleatória\n      setTimeout(() => {\n        selecionarCartaAleatoria();\n        setGirar(false);\n      }, 3000);\n      \n      // Adicione um log para debug\n      console.log('Roleta girando, carta será selecionada em 3 segundos');\n    }\n  };\n\n  return { girar, angulo, girarRoleta };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC5C,OAASC,gBAAgB,KAAQ,6BAA6B,CAE9D,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGL,QAAQ,CAAC,KAAK,CAAC,CACzC,KAAM,CAACM,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,CAAC,CAAC,CACvC,KAAM,CAAEQ,wBAAyB,CAAC,CAAGP,UAAU,CAACC,gBAAgB,CAAC,CAEjE,KAAM,CAAAO,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAI,CAACL,KAAK,CAAE,CACV;AACA,KAAM,CAAAM,UAAU,CAAGJ,MAAM,CAAG,IAAI,CAAGK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,GAAG,CAAC,CAClEN,SAAS,CAACG,UAAU,CAAC,CACrBL,QAAQ,CAAC,IAAI,CAAC,CAEd;AACAS,UAAU,CAAC,IAAM,CACfN,wBAAwB,CAAC,CAAC,CAC1BH,QAAQ,CAAC,KAAK,CAAC,CACjB,CAAC,CAAE,IAAI,CAAC,CAER;AACAU,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC,CACrE,CACF,CAAC,CAED,MAAO,CAAEZ,KAAK,CAAEE,MAAM,CAAEG,WAAY,CAAC,CACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}