{"ast":null,"code":"/**\n * Serviço para gerenciar áudio no aplicativo\n */class AudioService{constructor(){this.audio=null;this.initialized=false;this.musicaAtiva=false;this.volume=0.5;}/**\n     * Inicializa o serviço de áudio\n     * @param {string} src - O caminho para o arquivo de áudio\n     */init(){let src=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'/musicas/relaxing-background.mp3';if(this.initialized)return;this.audio=new Audio(src);this.audio.loop=true;this.audio.volume=this.volume;// Verificar se o usuário tinha a música ativa anteriormente\nconst musicaAtiva=localStorage.getItem('musicaAtiva')==='true';this.musicaAtiva=musicaAtiva;if(musicaAtiva){this.play();}this.initialized=true;}/**\n     * Reproduz o áudio\n     */play(){if(!this.initialized){this.init();}if(this.audio){try{const playPromise=this.audio.play();if(playPromise!==undefined){playPromise.catch(error=>{console.error(\"Erro ao reproduzir áudio:\",error);});}this.musicaAtiva=true;localStorage.setItem('musicaAtiva','true');}catch(error){console.error(\"Erro ao reproduzir áudio:\",error);}}}/**\n     * Pausa o áudio\n     */pause(){if(this.audio){this.audio.pause();this.musicaAtiva=false;localStorage.setItem('musicaAtiva','false');}}/**\n     * Alterna entre tocar e pausar a música\n     * @returns {boolean} - O novo estado (true = tocando, false = pausado)\n     */toggle(){if(this.musicaAtiva){this.pause();}else{this.play();}return this.musicaAtiva;}/**\n     * Define o volume do áudio\n     * @param {number} value - O valor do volume (entre 0 e 1)\n     */setVolume(value){if(value>=0&&value<=1){this.volume=value;if(this.audio){this.audio.volume=this.volume;}}}/**\n     * Verifica se a música está tocando\n     * @returns {boolean} - true se a música estiver tocando, false caso contrário\n     */isPlaying(){return this.musicaAtiva;}}// Exporta uma única instância do serviço\nconst audioService=new AudioService();export default audioService;","map":{"version":3,"names":["AudioService","constructor","audio","initialized","musicaAtiva","volume","init","src","arguments","length","undefined","Audio","loop","localStorage","getItem","play","playPromise","catch","error","console","setItem","pause","toggle","setVolume","value","isPlaying","audioService"],"sources":["/Users/alersonrigo/roleta-de-reflexoes/src/services/AudioService.js"],"sourcesContent":["/**\n * Serviço para gerenciar áudio no aplicativo\n */\nclass AudioService {\n    constructor() {\n      this.audio = null;\n      this.initialized = false;\n      this.musicaAtiva = false;\n      this.volume = 0.5;\n    }\n  \n    /**\n     * Inicializa o serviço de áudio\n     * @param {string} src - O caminho para o arquivo de áudio\n     */\n    init(src = '/musicas/relaxing-background.mp3') {\n      if (this.initialized) return;\n  \n      this.audio = new Audio(src);\n      this.audio.loop = true;\n      this.audio.volume = this.volume;\n      \n      // Verificar se o usuário tinha a música ativa anteriormente\n      const musicaAtiva = localStorage.getItem('musicaAtiva') === 'true';\n      this.musicaAtiva = musicaAtiva;\n      \n      if (musicaAtiva) {\n        this.play();\n      }\n      \n      this.initialized = true;\n    }\n  \n    /**\n     * Reproduz o áudio\n     */\n    play() {\n      if (!this.initialized) {\n        this.init();\n      }\n  \n      if (this.audio) {\n        try {\n          const playPromise = this.audio.play();\n          \n          if (playPromise !== undefined) {\n            playPromise.catch(error => {\n              console.error(\"Erro ao reproduzir áudio:\", error);\n            });\n          }\n          \n          this.musicaAtiva = true;\n          localStorage.setItem('musicaAtiva', 'true');\n        } catch (error) {\n          console.error(\"Erro ao reproduzir áudio:\", error);\n        }\n      }\n    }\n  \n    /**\n     * Pausa o áudio\n     */\n    pause() {\n      if (this.audio) {\n        this.audio.pause();\n        this.musicaAtiva = false;\n        localStorage.setItem('musicaAtiva', 'false');\n      }\n    }\n  \n    /**\n     * Alterna entre tocar e pausar a música\n     * @returns {boolean} - O novo estado (true = tocando, false = pausado)\n     */\n    toggle() {\n      if (this.musicaAtiva) {\n        this.pause();\n      } else {\n        this.play();\n      }\n      return this.musicaAtiva;\n    }\n  \n    /**\n     * Define o volume do áudio\n     * @param {number} value - O valor do volume (entre 0 e 1)\n     */\n    setVolume(value) {\n      if (value >= 0 && value <= 1) {\n        this.volume = value;\n        \n        if (this.audio) {\n          this.audio.volume = this.volume;\n        }\n      }\n    }\n  \n    /**\n     * Verifica se a música está tocando\n     * @returns {boolean} - true se a música estiver tocando, false caso contrário\n     */\n    isPlaying() {\n      return this.musicaAtiva;\n    }\n  }\n  \n  // Exporta uma única instância do serviço\n  const audioService = new AudioService();\n  export default audioService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}